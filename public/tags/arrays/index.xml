<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arrays on Mr. Pointing</title>
    <link>http://localhost:1313/tags/arrays/</link>
    <description>Recent content in Arrays on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 18 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/arrays/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contains Duplicate</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</guid>
      <description>Question: Given an integer array nums, return true if any value appears more than once in the array, otherwise return false.&#xA;How to Solve: We can create a secondary list that we can start to throw the values from our array nums into, and check to see if they already exist in the list or not. As soon as we enter a number that already exists in our list, it will return True and end.</description>
    </item>
    <item>
      <title>Two Integer Sum</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</guid>
      <description>Question: Given an array of integers nums and an integer target, return the indices i and j such that nums[i] + nums[j] == target and i != j.&#xA;You may assume that every input has exactly one pair of indices i and j that satisfy the condition.&#xA;Return the answer with the smaller index first.&#xA;How to Solve: We can use a two pointer approach with i and j. First, we set up a for loop that will iterate j from the length of the array to the first position.</description>
    </item>
    <item>
      <title>1122. Relative Sort Array</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</link>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</guid>
      <description>Modified: August 02 2024&#xA;Description:&#xA;Given two arrays, arr1 and arr2, where all elements in arr2 are distinct, as well as all elements in arr2 are in arr1.&#xA;Sort the elements of arr1 so that the ordering of items in arr1 is the same as arr2. Any element not in arr2 should be appended in ascending/increasing order at the end of the list.&#xA;Example: Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6] Output: [2,2,2,1,4,3,3,9,6,7,19]</description>
    </item>
  </channel>
</rss>
