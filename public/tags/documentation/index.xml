<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Mr. Pointing</title>
    <link>http://localhost:1313/tags/documentation/</link>
    <description>Recent content in Documentation on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 29 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/documentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neovim Tutor</title>
      <link>http://localhost:1313/notes/computer-science/neovim/neovim-tutor/</link>
      <pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/neovim/neovim-tutor/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;After going through &lt;a href=&#34;http://localhost:1313/notes/computer-science/textbooks/programming-in-lua/the-basics/programming-in-lua---chapter-1/&#34;&gt;Programming in Lua&lt;/a&gt;, I started watching a video series on &lt;a href=&#34;http://localhost:1313/&#34;&gt;learning Neovim&lt;/a&gt;. It really got me wanting to try out Neovim, so I started with the tutor. I&amp;rsquo;ll probably just throw in a few of the most important things I learn in each chapter of the tutor.&lt;/p&gt;&#xA;&lt;h2 id=&#34;chapter-1&#34;&gt;Chapter 1&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Moving can be done with the arrows or &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, and &lt;code&gt;l&lt;/code&gt; to move left, down, up, and right respectively&lt;/li&gt;&#xA;&lt;li&gt;You can open any file in Neovim with &lt;code&gt;nvim FILENAME&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Exiting Neovim is done with &lt;code&gt;:q!&lt;/code&gt; to discard changes, and &lt;code&gt;:wq&lt;/code&gt; to keep changes&lt;/li&gt;&#xA;&lt;li&gt;Deleting characters outside of &lt;code&gt;insert&lt;/code&gt; mode can be done with hitting &lt;code&gt;x&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Entering &lt;code&gt;insert&lt;/code&gt; mode can be done by hitting &lt;code&gt;i&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can append to any line by hitting &lt;code&gt;A&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Hitting &lt;code&gt;Esc&lt;/code&gt; brings you back to &lt;code&gt;normal&lt;/code&gt; mode&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chapter-2&#34;&gt;Chapter 2&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;code&gt;delete&lt;/code&gt; operator can be used to quickly get rid of words&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;dw&lt;/code&gt; to delete from your cursor to the next word&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;d$&lt;/code&gt; to delete from your cursor to the end of a line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;dd&lt;/code&gt; to delete an entire line&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;You can use numbers before operators to repeat operations&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;w&lt;/code&gt; moves word to word by the first letter&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;e&lt;/code&gt; moves word to word by the last letter&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Change command syntax is as follows, &lt;code&gt;operator [number] motion&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0&lt;/code&gt; moves to the beginning of a line&lt;/li&gt;&#xA;&lt;li&gt;Undo changes with &lt;code&gt;u&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Undo all changes to a line with &lt;code&gt;U&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Go forward in time with &lt;code&gt;Ctrl+r&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chapter-3&#34;&gt;Chapter 3&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;After deleting anything, you can put it anywhere with &lt;code&gt;p&lt;/code&gt;, placing it after the cursor&lt;/li&gt;&#xA;&lt;li&gt;Replace any character with &lt;code&gt;r&lt;/code&gt; and the character you want&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;c&lt;/code&gt; is the change operator; it replaces a section with putting you into &lt;code&gt;insert&lt;/code&gt; mode to make changes&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ce&lt;/code&gt; or &lt;code&gt;c#e&lt;/code&gt; will delete from the cursor to the end of the word or # amount of words&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chapter-4&#34;&gt;Chapter 4&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you want to display your current line location, you can with &lt;code&gt;Ctrl+g&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;gg&lt;/code&gt; brings your cursor to the first line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;#G&lt;/code&gt; brings your cursor to line number #&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;G&lt;/code&gt; brings your cursor to the end of the file&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;You can search for text using &lt;code&gt;/&lt;/code&gt; and text to search forward in the file&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You search backwards using &lt;code&gt;?&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;When searching, press &lt;code&gt;n&lt;/code&gt; for the next occurrence and &lt;code&gt;N&lt;/code&gt; for the previous&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;%&lt;/code&gt; to bring your cursor to the opening or closing of a pair of brackets&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;:s/old/new&lt;/code&gt; to substitute the first occurrence of &lt;code&gt;old&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can specify what lines you want to effect with &lt;code&gt;:#,#s&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;You can use &lt;code&gt;:s/old/new/g&lt;/code&gt; to replace an entire lines &lt;code&gt;old&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;:%s/old/new&lt;/code&gt; to replace all &lt;code&gt;old&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chapter-5&#34;&gt;Chapter 5&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can use external commands using the &lt;code&gt;!&lt;/code&gt; operator;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;:!ls&lt;/code&gt; will run &lt;code&gt;ls&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Usually opens it up in a smaller window&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;We can create new files easily with &lt;code&gt;:w FILENAME&lt;/code&gt;, and just as easily remove it with &lt;code&gt;:!rm FILENAME&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Traditional highlighting can be accomplished using &lt;code&gt;v&lt;/code&gt; or &lt;code&gt;Visual Selection&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;After highlighting a section of text, you can use &lt;code&gt;d&lt;/code&gt; to simply delete the selection&lt;/li&gt;&#xA;&lt;li&gt;You can even save and move selected text into a separate file, writing &lt;code&gt;:w FILENAME&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You&amp;rsquo;ll notice after writing the &lt;code&gt;:&lt;/code&gt;, some more characters appeared after it, &lt;code&gt;&#39;&amp;lt;, &#39;&amp;gt;&lt;/code&gt;. I don&amp;rsquo;t know why this happens, but it does let you know nicely that you are in some modifier mode&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;You can retrieve and place the contents of any file using &lt;code&gt;:r FILENAME&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A cool trick is reading the output of external commands; you can use &lt;code&gt;:r !ls&lt;/code&gt; to read in the output of &lt;code&gt;ls&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chapter-6&#34;&gt;Chapter 6&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open is a command you can use to insert a new line under or above an existing line&#xA;&lt;ul&gt;&#xA;&lt;li&gt;On a line, type &lt;code&gt;o&lt;/code&gt; to insert a new line under the line your cursor exists on&lt;/li&gt;&#xA;&lt;li&gt;Typing &lt;code&gt;O&lt;/code&gt; will do the same but above the line your cursor is on&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;You can append to any line&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;a&lt;/code&gt; brings you to the end of the word of your cursor&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;A&lt;/code&gt; brings you to the end of the line your cursor is on&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;A new mode, &lt;code&gt;Replace&lt;/code&gt; mode, can be entered not using &lt;code&gt;r&lt;/code&gt;, but &lt;code&gt;R&lt;/code&gt;. It works like &lt;code&gt;Insert&lt;/code&gt; mode but replaces over characters instead of inserting them into the line&lt;/li&gt;&#xA;&lt;li&gt;Copy using &lt;code&gt;y&lt;/code&gt; and paste with &lt;code&gt;p&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You can use &lt;code&gt;v&lt;/code&gt; to select and &lt;code&gt;y&lt;/code&gt; to copy it&lt;/li&gt;&#xA;&lt;li&gt;You could also use &lt;code&gt;yank&lt;/code&gt; as an operator, like using &lt;code&gt;yw&lt;/code&gt; to copy a word&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;P&lt;/code&gt; places before your cursor instead of after&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;:set&lt;/code&gt; operator can be used to configure other commands&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;:set ic&lt;/code&gt; ignores casing when searching&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:set is&lt;/code&gt; shows partial matches&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:set hls&lt;/code&gt; highlights all matching phrases&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;code&gt;no&lt;/code&gt; in front of any of these options to switch them off&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Sorting Techniques</title>
      <link>http://localhost:1313/notes/computer-science/python/advanced-python/sorting-techniques/</link>
      <pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/advanced-python/sorting-techniques/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/howto/sorting.html&#34;&gt;Link&lt;/a&gt; to article&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;sorting-basics&#34;&gt;Sorting Basics&lt;/h1&gt;&#xA;&lt;p&gt;There are two basic ways we can ascending sort (organize from least to greatest on value) built into Python, &lt;code&gt;.sort()&lt;/code&gt; on a list object, and the &lt;code&gt;sorted()&lt;/code&gt; function, which takes in any iterable sequence.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;sorted()&lt;/code&gt; will actually return the sequence in order, while &lt;code&gt;.sort()&lt;/code&gt; is more of a step to be done, and will actually return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; sorted(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;key-functions&#34;&gt;Key Functions&lt;/h2&gt;&#xA;&lt;p&gt;Both of the methods we looked at above have an additional parameter &lt;code&gt;key&lt;/code&gt;, which takes in a function that is performed on each element within the sorted list before making any comparisons. This allows for different sorting methods; some even use lambda which is pretty cool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 16</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-16/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-16/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;creating-tables&#34;&gt;Creating Tables&lt;/h1&gt;&#xA;&lt;p&gt;One of the hardest things to do in data science (at least, to me) is pick up another person&amp;rsquo;s collected data. It will often take a few minutes of &amp;ldquo;getting calibrated&amp;rdquo; to understand the rows from simple things like understanding naming conventions (some are really bad) to more complex things like what story the data is telling.&lt;/p&gt;&#xA;&lt;p&gt;The more complicated problems will end up needing some visualization tools which is something we&amp;rsquo;ll look at later, so for now let&amp;rsquo;s not think too big. However, one of the best ways to become more familiar with a dataset is to build it from scratch. Since we&amp;rsquo;re building it from scratch, that means we&amp;rsquo;re going to need some tables to store the data in.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 17 &amp; 18</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-17--18/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-17--18/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;altering-tables&#34;&gt;Altering Tables&lt;/h1&gt;&#xA;&lt;p&gt;If you need to include additional information not provided by the original tables creation statement, you can use an &lt;code&gt;ALTER TABLE&lt;/code&gt; statement to manipulate and create columns.&lt;/p&gt;&#xA;&lt;h2 id=&#34;adding-columns&#34;&gt;Adding Columns&lt;/h2&gt;&#xA;&lt;p&gt;Extremely similar to how we add in new rows, adding in a new column uses the following syntax:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt; DataType OptionalTableConstraint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; default_value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We specify a table we want to add into, provide the column&amp;rsquo;s name and datatype, and we have the option for a table constraint and default value if needed. It&amp;rsquo;s usually good practice to insert some default value, since all rows that already exist in the table will need some value for the new column (otherwise it will be NULL).&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 13</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-13/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-13/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;inserting-rows&#34;&gt;Inserting Rows&lt;/h1&gt;&#xA;&lt;p&gt;When we first started going over SQL databases, we just understood them as basic tables with columns of properties and rows of instances. The next step up is the &lt;em&gt;Database Schema&lt;/em&gt;, which describes all tables in a database and the datatypes those rows can contain.&lt;/p&gt;&#xA;&lt;p&gt;Because each row has defined types that are allowed, it keeps the database cleaner and easier to navigate.&lt;/p&gt;&#xA;&lt;p&gt;Our first non-&lt;code&gt;SELECT&lt;/code&gt; statement, we can start to insert data into our tables using the &lt;code&gt;INSERT&lt;/code&gt; statement:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 14 &amp; 15</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-14--15/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-14--15/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;updating-rows&#34;&gt;Updating Rows&lt;/h1&gt;&#xA;&lt;p&gt;If we can &lt;code&gt;SELECT&lt;/code&gt; rows, and &lt;code&gt;INSERT&lt;/code&gt; data into rows, we can most certainly &lt;code&gt;UPDATE&lt;/code&gt; them as well.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;UPDATE&lt;/code&gt; works similarly to &lt;code&gt;INSERT&lt;/code&gt;, and needs a &lt;code&gt;WHERE&lt;/code&gt; clause to specify which rows should be updated:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value_or_expression&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    other_column &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value_or_expression&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obviously, like &lt;code&gt;INSERT&lt;/code&gt;, the values or expressions returned should match the data type of the expected column/property.&lt;/p&gt;&#xA;&lt;p&gt;A helpful tip is to always try a &lt;code&gt;SELECT&lt;/code&gt; statement out first to make sure you are grabbing all the rows you think you want &lt;em&gt;before&lt;/em&gt; you make any changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 10 &amp; 11</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-10--11/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-10--11/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;queries-with-aggregates&#34;&gt;Queries with Aggregates&lt;/h1&gt;&#xA;&lt;p&gt;Aggregates are analogous with built-in functions. They&amp;rsquo;re helpful pieces of code we can use to make writing our queries easier. The syntax is as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; AGG_FUNC(column_or_expression) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; agg_description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; constraint_expression;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the previous syntax, we would use said function over all rows and return a single result. Here are some functions we&amp;rsquo;ll use:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;COUNT(column or *)&lt;/code&gt;: returns the number of rows if no columns specified, otherwise returns number of non-NULL values in chosen column&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;MIN(column)&lt;/code&gt;: returns smallest numerical value for all rows in group&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;MAX(column)&lt;/code&gt;: returns largest numerical value for all rows in group&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AVG(column)&lt;/code&gt;: returns average numerical value for all rows in group&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SUM(column)&lt;/code&gt;: returns sum of all numerical values for all rows in the group&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There&amp;rsquo;s another concept we should look at called &lt;em&gt;grouped aggregate functions&lt;/em&gt;, which instead of returning values for all rows, allows you to return multiple values based upon a specified delimiter or group. We can achieve this by using the &lt;code&gt;GROUP BY&lt;/code&gt; statement:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 12</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-12/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-12/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;order-of-execution&#34;&gt;Order of Execution&lt;/h1&gt;&#xA;&lt;p&gt;The order of execution within queries is important to understand. When getting unexpected output one of the first things you should check is your syntax and be sure you 100% know what you&amp;rsquo;re saying/what you expect to get back. If you aren&amp;rsquo;t writing complete or correct sentences, you&amp;rsquo;ll never get correct responses.&lt;/p&gt;&#xA;&lt;p&gt;The following syntax is the complete structure for a query and is executed sequentially (one after the other):&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 9</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-9/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-9/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;queries-with-expressions&#34;&gt;Queries with Expressions&lt;/h1&gt;&#xA;&lt;p&gt;Now that we understand the basics of querying, we can really start to dive deeper by building more complex statements as &lt;em&gt;expressions&lt;/em&gt;. These expressions can be mathematical or even basic string functions.&lt;/p&gt;&#xA;&lt;p&gt;When writing expressions, we should use the &lt;code&gt;AS&lt;/code&gt; keyword to create an alias for our expression, which makes our statements easier to read. This can be used on columns or tables.&lt;/p&gt;&#xA;&lt;p&gt;The following statement is a great example of an expression:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 7</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-7/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-7/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;outer-joins-vs-inner-joins&#34;&gt;Outer Joins vs. Inner Joins&lt;/h1&gt;&#xA;&lt;p&gt;Any table from an &lt;code&gt;INNER JOIN&lt;/code&gt; will &lt;em&gt;only contain information that belongs in &lt;strong&gt;BOTH&lt;/strong&gt; tables.&lt;/em&gt; These can be limiting, which is where &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, and &lt;code&gt;FULL JOIN&lt;/code&gt;&amp;rsquo;s come into the picture.&lt;/p&gt;&#xA;&lt;p&gt;Our syntax for a standard expression doesn&amp;rsquo;t change, only get&amp;rsquo;s different options for our &lt;code&gt;JOIN&lt;/code&gt; keyword.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt;, another_table_column, ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RIGHT&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; another_table&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; mytable.id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; another_table.id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition(s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt;, ... &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; num_limit &lt;span style=&#34;color:#66d9ef&#34;&gt;OFFSET&lt;/span&gt; num_offset;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s say we have two tables, joining table A to table B. Doing a &lt;code&gt;LEFT JOIN&lt;/code&gt; will include rows from A even if there isn&amp;rsquo;t a match in B. Similarly, a &lt;code&gt;RIGHT JOIN&lt;/code&gt; will return rows found in B even if there is no match in A. If we were to do a &lt;code&gt;FULL JOIN&lt;/code&gt;, all rows are kept even if there is no match.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 8</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-8/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-8/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;null-values&#34;&gt;NULL Values&lt;/h1&gt;&#xA;&lt;p&gt;Unfortunately, working with data is an easy way to see that we don&amp;rsquo;t live in a perfect world. There are more than a few instances of there not being any data available to display, which can cause all sorts of issues with our queries. These values are what we call &lt;strong&gt;NULLS&lt;/strong&gt;*, and can differ depending on your situation.&lt;/p&gt;&#xA;&lt;p&gt;Most often at the start, we can leave them as NULL. However, depending on the structure of your table, you could do a 0, or even an empty text string.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NumPy Quickstart</title>
      <link>http://localhost:1313/notes/computer-science/python/numpy-notes/numpy-quickstart/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/numpy-notes/numpy-quickstart/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://numpy.org/doc/stable/user/quickstart.html&#34;&gt;Link&lt;/a&gt; to documentation.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;What should you know to get the most out of this lesson? At the very least, the fundamentals of Python. You should also refer to &lt;a href=&#34;http://localhost:1313/notes/computer-science/python/numpy-notes/what-is-numpy/&#34;&gt;this&lt;/a&gt; to get a fundamental understanding of the reasons why we&amp;rsquo;d want to use &lt;code&gt;ndarray&lt;/code&gt; in the first place.&lt;/p&gt;&#xA;&lt;p&gt;What are we doing this lesson then? We&amp;rsquo;re going to learn about what one, two, and $n$ dimensional arrays actually are, some algebra operations on &lt;code&gt;ndarray&lt;/code&gt; objects &lt;em&gt;without&lt;/em&gt; &lt;code&gt;for&lt;/code&gt; loops, and even more advanced things like what axis and shape properties are.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 4</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-4/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-4/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;filtering-and-sorting-results&#34;&gt;Filtering and Sorting Results&lt;/h1&gt;&#xA;&lt;p&gt;One way to ensure we don&amp;rsquo;t get duplicate rows, we could use the &lt;code&gt;DISTINCT&lt;/code&gt; keyword;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt;, another_column, ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition(s);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This however is pretty indiscriminate, and we&amp;rsquo;ll look at how to specify duplicates with &lt;code&gt;GROUP BY&lt;/code&gt; later.&lt;/p&gt;&#xA;&lt;p&gt;Often in the real world, our data is not going to be ordered nice and neatly. Quite often, data is inserted without rhyme or reason, and purely based off when some events happened and collected rather than compared to the rest of the data in the data set. Because of this, we&amp;rsquo;ll want to order our data off a certain condition to make it more readable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 6</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-6/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-6/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;multi-table-queries-with-joins&#34;&gt;Multi-table Queries with JOINs&lt;/h1&gt;&#xA;&lt;p&gt;Unlike the database we&amp;rsquo;ve been using for most of these lessons, real world data is usually divided into different tables, often through a process we call &lt;strong&gt;normalization&lt;/strong&gt;. Normalization is the procedure used to break down large tables into smaller more organic tables. This reduces duplicate data, and allows for a more natural growth of data within respective tables.&lt;/p&gt;&#xA;&lt;p&gt;Due to our data being broken up, our queries will in turn have to become more complex to grab information over multiple tables. We can achieve this with a &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 2</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-2--3/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-2--3/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;specifying-data-to-select-constraints&#34;&gt;Specifying Data to Select (Constraints)&lt;/h1&gt;&#xA;&lt;p&gt;When our table has only a few rows, a &lt;code&gt;select *&lt;/code&gt; query isn&amp;rsquo;t so bad. However, if we have hundreds, sometimes thousands of rows of data, retrieving all of them at once becomes an issue.&lt;/p&gt;&#xA;&lt;p&gt;That reason is why we have the ability to specify our results with conditional statements:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column&lt;/span&gt;, another_column, ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; mytable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; condition&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; another_condition&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; ...;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can collect more complex results from building more complex queries. Say for example we wanted to collect reptiles who don&amp;rsquo;t have teeth and are the color green, we could use a query like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Introduction</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---introduction/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---introduction/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://sqlbolt.com/lesson/introduction&#34;&gt;Link&lt;/a&gt; to lessons.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-to-sql&#34;&gt;Introduction to SQL&lt;/h1&gt;&#xA;&lt;p&gt;What is SQL? &lt;strong&gt;Structured Query Language&lt;/strong&gt; is a language used to create, maintain, and use relational databases. Thousands of applications from simple projects to Microsoft products use SQL through various formats and configurations.&lt;/p&gt;&#xA;&lt;p&gt;Some use SQLite, MySQL, Postgres, Oracle, or Microsoft SQL, to name a few. Each use SQL as base, and include features that garner appeal from different developers.&lt;/p&gt;&#xA;&lt;h2 id=&#34;relational-databases&#34;&gt;Relational Databases&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;em&gt;relational database&lt;/em&gt; is a collection of 2D tables that are linked through some key value. All tables are made of a certain number of rows and columns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 1</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-1/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-1/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;When we want to get information for a SQL table, we use the &lt;code&gt;SELECT&lt;/code&gt; statement, or a &lt;em&gt;query&lt;/em&gt;. Within a query is what data we want, where to get it from, and any additional formatting we want done before we get said data.&lt;/p&gt;&#xA;&lt;p&gt;When selecting information from a table, we have to understand the make-up of a table. Let&amp;rsquo;s say we have a &lt;code&gt;reptiles&lt;/code&gt; table. There might be different types of reptiles (snakes, lizards, turtles, crocodiles) but each reptile has characteristics that make it unique. These characteristics are broken down into the different columns within a table, and each entry of a reptile is denoted by the rows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Help - Plugins</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---plugins/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---plugins/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;core-plugins&#34;&gt;Core Plugins&lt;/h1&gt;&#xA;&lt;p&gt;Out of the box, Obsidian has a plethora of usable features. Most you might never touch. Others will be ingrained in your workflow you&amp;rsquo;ll forget they&amp;rsquo;re plugins. This list is not extensive- like everything else, more detailed information can be found in their &lt;a href=&#34;https://help.obsidian.md/Plugins/Core+plugins&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;outgoing-and-backlinks&#34;&gt;Outgoing and Backlinks&lt;/h2&gt;&#xA;&lt;p&gt;We already saw how powerful linking can be using Obsidian. Let&amp;rsquo;s define two specific types of links; &lt;strong&gt;outgoing links&lt;/strong&gt; and &lt;strong&gt;backlinks&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Backlinks&lt;/strong&gt; are a collection of notes that precede a given note. A note can have as many backlinks as there are references; there is no limit. You can view backlinks by default on your right-hand side bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Help - Editing and Formatting</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---editing-and-formatting/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---editing-and-formatting/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;editing-and-formatting&#34;&gt;Editing and Formatting&lt;/h1&gt;&#xA;&lt;p&gt;Congratulations, after this year you&amp;rsquo;ll technically know &lt;em&gt;two&lt;/em&gt; languages! &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;, what we&amp;rsquo;re writing in, isn&amp;rsquo;t technically a programming language, but it is a useful format to understand and be able to read, just in case something isn&amp;rsquo;t rendered or just browsing files.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-formatting-syntax&#34;&gt;Basic Formatting Syntax&lt;/h2&gt;&#xA;&lt;p&gt;A paragraph is just a block of text, separated by a newline. The paragraph for a literal example:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This is a paragraph. &#xA;&#xA;This is a different paragraph.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We talked about headings before, now let&amp;rsquo;s get specific. Headings are paragraphs that start with a certain amount of hashtags. The amount of hashes correlate the the heading number, and the more hashes the smaller it is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Help - User Interface</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---user-interface/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---user-interface/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;user-interface&#34;&gt;User Interface&lt;/h1&gt;&#xA;&lt;p&gt;A user interface, otherwise referred to as a UI, is the visual parts of a program you interact with when using it. For Obsidian, the UI is the entire window. Let&amp;rsquo;s break it down piece by piece.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;appearance&#34;&gt;Appearance&lt;/h2&gt;&#xA;&lt;p&gt;Before we go any further, we should go over the fun part. Making it your own. If your left bar isn&amp;rsquo;t already open, hit the button on the top left (it&amp;rsquo;s a little square with lines in it). Once open, you hit the cog on the bottom right of the left bar. Under the options bar, you hit &amp;ldquo;Appearance.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Help - Getting Started</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---getting-started/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---getting-started/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h1&gt;&#xA;&lt;p&gt;If you don&amp;rsquo;t know where to start, start here.&lt;/p&gt;&#xA;&lt;h2 id=&#34;downloading-and-installing&#34;&gt;Downloading and Installing&lt;/h2&gt;&#xA;&lt;p&gt;For the most part, you&amp;rsquo;ll have access to the computers at school all year long, so you can always get Obsidian through there. If however you want to get Obsidian going at home, look no further.&lt;/p&gt;&#xA;&lt;h3 id=&#34;install-on-windows&#34;&gt;Install on Windows&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://obsidian.md/download&#34;&gt;Click&lt;/a&gt; the link, then &lt;strong&gt;Universal&lt;/strong&gt; and follow instructions.&lt;/p&gt;&#xA;&lt;h3 id=&#34;install-on-mac&#34;&gt;Install on Mac&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://obsidian.md/download&#34;&gt;Click&lt;/a&gt; the link, then &lt;strong&gt;Universal&lt;/strong&gt; and follow instructions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Obsidian Help - Preface</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---preface/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---preface/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://help.obsidian.md/Home&#34;&gt;Link&lt;/a&gt; to Documentation.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;what-is-obsidian&#34;&gt;What is Obsidian?&lt;/h1&gt;&#xA;&lt;p&gt;Essentially, a note-taking tool. All it boils down too is the format in which your notes are placed (I just think Obsidian is neat). Obsidian uses a Markdown, a markup-language. Not really a programming language, more of an &lt;em&gt;encoding&lt;/em&gt; language, but we don&amp;rsquo;t need to worry about that for right now.&lt;/p&gt;&#xA;&lt;p&gt;For now, all we are going to focus on is the basics-you have something you want to take notes on, and you write down your notes inside. No (strict) syntax, no indenting, no errors, no worries. Unlike a standard document editor however (think Word) it lacks the ability and flare of the more powerful applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:1313/notes/computer-science/hugo/getting-started-with-hugo/</link>
      <pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/hugo/getting-started-with-hugo/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;&#xA;&lt;p&gt;It&amp;rsquo;s remarkably easy to start using Hugo. So much so it makes me want to start working on my portfolio immediately.&lt;/p&gt;&#xA;&lt;p&gt;To start, we need to use &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.4&#34;&gt;PowerShell&lt;/a&gt; instead of Windows PowerShell. Apparently, they are different.&lt;/p&gt;&#xA;&lt;p&gt;You also need to have Git installed.&lt;/p&gt;&#xA;&lt;p&gt;Once both are done, you can run the following commands:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;hugo new site quicksite&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This creates a new directory that will become our new website. &lt;code&gt;quicksite&lt;/code&gt; is the name of your directory.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cd quicksite&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Change directory to our new website&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initialize a new git repository&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git submodule add https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Adds a new submodule, for a theme called Hello Friend, cloning the GitHub page into a new directory called &lt;code&gt;themes&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;echo &amp;quot;theme = &#39;hello-friend-ng&#39;&amp;quot; &amp;gt;&amp;gt; hugo.toml&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Appends the phrase &lt;code&gt;theme = &#39;hello-friend-ng&#39;&lt;/code&gt; into the &lt;code&gt;hugo.toml&lt;/code&gt; file, which allows for the theme to be applied.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Starts running the server for our new website!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;We can set up our content, or the pages for our site, by creating it directly on the command line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jinja</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/jinja/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/jinja/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.1.x/&#34;&gt;Link&lt;/a&gt; to documentation.&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Werkzeug</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/werkzeug/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/werkzeug/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://werkzeug.palletsprojects.com/en/3.0.x/&#34;&gt;Link&lt;/a&gt; to documentation.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;First of all, what is WSGI?&lt;/p&gt;&#xA;&lt;p&gt;Web Server Gateway Interface, a specification that describes how a web server communicates with web applications, and how web applications can be chained together to process one request.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 12</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;virtual-environments-and-packages&#34;&gt;&lt;strong&gt;Virtual Environments and Packages&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-introduction&#34;&gt;&lt;strong&gt;12.1 Introduction&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Often, you&amp;rsquo;re going to need tools and modules that aren&amp;rsquo;t included with Python by default, or in your standard library. One Python install might not suffice for most applications.&lt;/p&gt;&#xA;&lt;p&gt;To circumnavigate this, we create &lt;em&gt;virtual environments&lt;/em&gt;, that act as self-contained directories with an installation of Python, and any number of packages.&lt;/p&gt;&#xA;&lt;h3 id=&#34;122-creating-virtual-environments&#34;&gt;&lt;strong&gt;12.2 Creating Virtual Environments&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;We can use the &lt;code&gt;venv&lt;/code&gt; module to create and manage our own virtual environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyCharm IDE Features</title>
      <link>http://localhost:1313/notes/computer-science/python/pycharm-ide-features/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/pycharm-ide-features/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h3 id=&#34;get-acquainted-with-pycharm&#34;&gt;Get Acquainted with PyCharm&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The project view is one of the main tool windows, containing the project directory, external libraries, and scratch files. You can also open it with &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The Python interpreter is easily viewable in the status bar in the bottom right.&lt;/li&gt;&#xA;&lt;li&gt;You can run, debug, or other option on the top right of the window. You can also press &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;F10&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;We got an unexpected error in our code, featured below. We can place stop at the return statement to debug our code and see what&amp;rsquo;s wrong. After placed, use the debug option (lil green bug).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;find_average&lt;/span&gt;(values):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; values:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AVERAGE&amp;#34;&lt;/span&gt;, find_average([&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;There is a debug workflow lesson later on we can do.&lt;/li&gt;&#xA;&lt;li&gt;When hitting &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Enter&lt;/code&gt; on something, that&amp;rsquo;s called performing a quick fix. You can quick fix formatting issues, and even functions to add intentions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Intentions are specifiers added to functions to define what type of return object is expected.&lt;/strong&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Ex. &lt;code&gt;def sum_list(num_list: list) -&amp;gt; list:&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Shift twice on anything will open the Search Everywhere dialog, where you can do things with the selected text like case it or something else.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;editor-basics&#34;&gt;Editor Basics&lt;/h2&gt;&#xA;&lt;h3 id=&#34;context-actions&#34;&gt;Context Actions&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Enter&lt;/code&gt; invokes the Show Context Actions.&lt;/li&gt;&#xA;&lt;li&gt;We can do things like remove redundant parameters, or change the format to professional standard.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;search-for-actions&#34;&gt;Search for actions&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; will Find Action.&lt;/li&gt;&#xA;&lt;li&gt;Same action as double &lt;code&gt;Shift&lt;/code&gt;. You can search for &amp;lsquo;about&amp;rsquo; to find out info on PyCharm.&lt;/li&gt;&#xA;&lt;li&gt;We can even edit IDE settings, like line number visibility.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;expand-and-shrink-the-code-selection&#34;&gt;Expand and shrink the code selection&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;W&lt;/code&gt; to select the word under the caret, and you can continue to press it to move outwards to the entire call.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;W&lt;/code&gt; will work the other way around, shrinking down to a single word.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;comment-line&#34;&gt;Comment Line&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Comment any line using &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Slash&lt;/code&gt;. You can uncomment using the same command.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;duplicate-and-delete-lines&#34;&gt;Duplicate and Delete Lines&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Press &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;D&lt;/code&gt; wherever your caret is to duplicate it to another line below it. You can also duplicate multiple lines at the same time.&lt;/li&gt;&#xA;&lt;li&gt;You can press &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Y&lt;/code&gt; to delete the current line.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;move-code-fragments&#34;&gt;Move Code Fragments&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You can move whole lines down using &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;DownArrow&lt;/code&gt;. You can move whole lines up using &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;UpArrow&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;You can also move whole methods down, but replacing &lt;code&gt;Alt&lt;/code&gt; with &lt;code&gt;Ctrl&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;collapse&#34;&gt;Collapse&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;We often have to collapse code quickly for the sake of readability. We can use &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Minus&lt;/code&gt; to collapse anything we are currently in.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Equals&lt;/code&gt; will expand a code region.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;Minus&lt;/code&gt; will collapse all collapsible code in the file.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;Equals&lt;/code&gt; will expand all expandable parts of the file.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;surround-and-unwrap&#34;&gt;Surround and unwrap&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You can select a piece of code, and use &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; to bring up the surround with template feature. You can choose from a few structures like &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;try&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;You can unwrap using &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;Delete&lt;/code&gt;.\&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;multiple-selections&#34;&gt;Multiple selections&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Let&amp;rsquo;s say you have a bunch of &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; tags that need to be &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags. We can use our caret to hover over what we want, then use &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;J&lt;/code&gt; to select it.&lt;/li&gt;&#xA;&lt;li&gt;From there, we can use &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;J&lt;/code&gt; again to select the next occurrence, &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;J&lt;/code&gt; to deselect the last selected occurrence, and &lt;code&gt;Ctrl&lt;/code&gt; &lt;code&gt;Alt&lt;/code&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;code&gt;J&lt;/code&gt; to select all occurrences of it.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;8/12/2024&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 11</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;the-standard-library---part-2&#34;&gt;&lt;strong&gt;The Standard Library - Part 2&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;7/9/2024&lt;/p&gt;&#xA;&lt;p&gt;The second part here will go over more advanced, less common modules that nevertheless, exist.&lt;/p&gt;&#xA;&lt;h3 id=&#34;111-output-formatting&#34;&gt;&lt;strong&gt;11.1 Output Formatting&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;reprlib&lt;/code&gt; is an appropriately named library containing a version of &lt;code&gt;repr()&lt;/code&gt; modified for abbreviated displays of large or deeply nested containers:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; reprlib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; reprlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;repr(set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;supercalafragalisticexpialidocious&amp;#39;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&amp;#39;a&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;,...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pprint&lt;/code&gt; is a module with more sophisticated control over printing both built-in and user defined objects. Could also be called a &amp;ldquo;pretty printer&amp;rdquo;, it will add line breaks and indentation to more clearly reveal complex data structures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 10</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;a-brief-tour-of-the-standard-library&#34;&gt;&lt;strong&gt;A Brief Tour of the Standard Library&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;7/4/2024&lt;/p&gt;&#xA;&lt;h3 id=&#34;101-operating-system-interface&#34;&gt;&lt;strong&gt;10.1 Operating System Interface&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;os&lt;/code&gt; module provides functions for interacting with operating systems:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getcwd()     &lt;span style=&#34;color:#75715e&#34;&gt;# returns the working directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Python312&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/server/accesslogs&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;# change working directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mkdir today&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;# run the command mkdir in the system shell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Never use &lt;code&gt;from os import *&lt;/code&gt;. It&amp;rsquo;s not good practice to not  do this regardless, but it will specifically keep &lt;code&gt;os.open()&lt;/code&gt; from shadowing the built-in &lt;code&gt;open()&lt;/code&gt; function which operators for opening files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 9</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;classes&#34;&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/28/2024&lt;/p&gt;&#xA;&lt;p&gt;Classes combine data storage and functionality into one package. When you make a new class, you are making a new &lt;em&gt;type&lt;/em&gt; of object. A new &lt;em&gt;instance&lt;/em&gt;, or occurrence of that type are able to be made using function call of the class.&lt;/p&gt;&#xA;&lt;p&gt;A class is made up of attributes and methods defined by the classes definition.&lt;/p&gt;&#xA;&lt;p&gt;Python classes follow closely to other Object Oriented Programming languages classes in the following ways:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 8</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;errors-and-exceptions&#34;&gt;&lt;strong&gt;Errors and Exceptions&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/22/2024&lt;/p&gt;&#xA;&lt;p&gt;There are two distinguishable types of errors: &lt;em&gt;syntax errors&lt;/em&gt; and &lt;em&gt;exceptions&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;81-syntax&#34;&gt;&lt;strong&gt;8.1 Syntax&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Syntax errors (or parsing errors) are errors involving the actual use of the language.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt; print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   File &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt; print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;^^^^^&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SyntaxError&lt;/span&gt;: invalid syntax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the &lt;code&gt;while&lt;/code&gt; statement is missing the &lt;code&gt;:&lt;/code&gt; required to use it.&lt;/p&gt;&#xA;&lt;h3 id=&#34;82-exceptions&#34;&gt;&lt;strong&gt;8.2 Exceptions&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Even if code is syntactically correct, an error may occur when attempting to execute it. When the error is thrown, the last line of the error usually has an explanation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is NumPy</title>
      <link>http://localhost:1313/notes/computer-science/python/numpy-notes/what-is-numpy/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/numpy-notes/what-is-numpy/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://numpy.org/doc/stable/&#34;&gt;Link&lt;/a&gt; to documentation&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;what-is-numpy&#34;&gt;What is NumPy?&lt;/h1&gt;&#xA;&lt;p&gt;Python lists are great- easy to use, easy to understand, and perfect for quick one-and-done scenarios. However, there is a huge downside to lists. In most cases, since lists can accept any data type by default, this leaves lists open to unexpected data types you might not want around your list data.&lt;/p&gt;&#xA;&lt;p&gt;NumPy is a solution to this issue, specifically in the realm of scientific computing. It&amp;rsquo;s primary use is for it&amp;rsquo;s &lt;em&gt;multidimensional array objects&lt;/em&gt; and &lt;em&gt;assortment of fast methods for arrays&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 7</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;input-and-output&#34;&gt;&lt;strong&gt;Input and Output&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/18/2024&lt;/p&gt;&#xA;&lt;p&gt;There are three main ways to present output in Python; expression statements (not using &lt;code&gt;print()&lt;/code&gt;), using &lt;code&gt;print()&lt;/code&gt;, and using &lt;code&gt;write()&lt;/code&gt; which writes something into an existing or new file.&lt;/p&gt;&#xA;&lt;h3 id=&#34;71-fancier-output-formatting&#34;&gt;&lt;strong&gt;7.1 Fancier Output Formatting&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;At any point in the command line, I can just send out some text without any &lt;code&gt;print()&lt;/code&gt; commands and get back what I just sent in. That&amp;rsquo;s an expression statement. Not super important.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 6</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;modules&#34;&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/15/2024&lt;/p&gt;&#xA;&lt;p&gt;Obviously, using local instances are not viable for long time development is not realistic. This is why we write &lt;em&gt;scripts&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Python has the ability to writes scripts, or another method called modules. Definitions from modules can be imported into your instance of Python.&lt;/p&gt;&#xA;&lt;p&gt;Main is also given a definition here: the collection of variables that you have access to in a script executed at the top level and in calculator mode.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 5</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;data-structures&#34;&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/10/2024&lt;/p&gt;&#xA;&lt;h3 id=&#34;51-more-on-lists&#34;&gt;&lt;strong&gt;5.1 More on Lists&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Methods for Lists:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;list.append(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Adds an item to the end of the list&lt;/li&gt;&#xA;&lt;li&gt;Equivalent to &lt;code&gt;a[len(a):] = [x]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.extend(iterable)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Extend the list by appending all items from an iterable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.insert(i, x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Insert an item into a given position, where &lt;code&gt;i&lt;/code&gt; is the index location and &lt;code&gt;x&lt;/code&gt; is the value&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.remove(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove the first item from the list whose value is equal to &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;ValueError&lt;/code&gt; if no such item&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.pop([i])&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove the item at the given position in the list, and return it. Without an index, it will remove and return the last item in the list. &lt;code&gt;IndexError&lt;/code&gt; if the list is empty or the index is out of the list range&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.clear()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove all items from the list. Equivalent to &lt;code&gt;del a[:]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.index(x[, start[, end]]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return zero-based index from the value &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;ValueError&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; does not exist.&lt;/li&gt;&#xA;&lt;li&gt;Parameters interpreted as slices from the list in &lt;code&gt;[]&lt;/code&gt; format&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.count(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return the number of times &lt;code&gt;x&lt;/code&gt; appears in the list&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.sort(*, key=None, reverse=False)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sort the items of the list in place&lt;/li&gt;&#xA;&lt;li&gt;Arguments used for sort customization&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;key&lt;/code&gt; can be set to things like &lt;code&gt;key=str.lower&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;There&amp;rsquo;s a good &lt;a href=&#34;https://docs.python.org/3.12/howto/sorting.html#sortinghowto&#34;&gt;doc&lt;/a&gt; on sorting I want to go over later&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.reverse()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reverse the elements of the list in place&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.copy()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return a copy of the list&lt;/li&gt;&#xA;&lt;li&gt;Same as &lt;code&gt;a[:]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shroomie&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Methods like &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; or &lt;code&gt;sort&lt;/code&gt; modify the list and actually return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 4</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</link>
      <pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;control-flow-tools&#34;&gt;&lt;strong&gt;Control Flow Tools&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/5/2024&lt;/p&gt;&#xA;&lt;p&gt;The while loop was seen in the previous Fibonacci Sequence example.&lt;/p&gt;&#xA;&lt;h3 id=&#34;41-if-statements&#34;&gt;&lt;strong&gt;4.1 &lt;code&gt;if&lt;/code&gt; Statements&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Please enter an integer: &amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Please enter an integer: &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Negative so now it&amp;#39;s zero!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zero!!!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UNO!!!!!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nice B)&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Nice B)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Very basic; all you need is an if statement. Else is optional, and you can have many else if (&lt;code&gt;elif&lt;/code&gt;) statements as you desire.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 1, 2, and 3</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</link>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;Link to source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;6/2/2024&lt;/p&gt;&#xA;&lt;p&gt;In order to get a better understanding of Python as a whole language, I&amp;rsquo;m going to document and take notes as I go through the tutorial. I mostly would like to improve as a programmer, and eventually get a software job at Google or something.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;What is Python?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Python is an easy to learn, powerful programming language. Featuring efficient high-level data structures as well as a simple but effective approach to object-oriented programming.&lt;/li&gt;&#xA;&lt;li&gt;Ideal language for scripting and rapid application development&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Description of objects and modules are in &lt;a href=&#34;https://docs.python.org/3/library/index.html#library-index&#34;&gt;The Python Standard Library&lt;/a&gt;. I&amp;rsquo;ll probably go through this another day.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
