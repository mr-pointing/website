<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on Mr. Pointing</title>
    <link>http://localhost:1313/tags/flask/</link>
    <description>Recent content in Flask on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 25 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Become a Shell Wizard in ~12 Minutes</title>
      <link>http://localhost:1313/posts/computer-science/flask-notes/flask/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/computer-science/flask-notes/flask/</guid>
      <description>Modified: August 02 2024&#xA;Link to documentation.&#xA;Flask is a framework to create applications via Python. It makes web based applications rather simple.&#xA;Starting from the here, the installation page.&#xA;Installation Python Version Python version should be up to date. Flask supports 3.8 and newer.&#xA;Dependencies The following are installed automatically when installing Flask:&#xA;Werkzeug uses WSGI, the standard Python interface between applications and servers. Jinja is a template language that renders the pages your application serves.</description>
    </item>
    <item>
      <title>Deploying a Flask Application via Apache</title>
      <link>http://localhost:1313/posts/projects/deploying-a-flask-application-via-apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/projects/deploying-a-flask-application-via-apache/</guid>
      <description>Created: August 01 2024 Modified: August 02 2024&#xA;Link to the project website.</description>
    </item>
    <item>
      <title>Designing a RESTful API</title>
      <link>http://localhost:1313/posts/projects/designing-a-restful-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/projects/designing-a-restful-api/</guid>
      <description>Created: June 20 2024 Modified: August 02 2024&#xA;Watched this video to take some notes on what REST is.&#xA;API: Application Programming Interface, is how to computers can communicate with each other.&#xA;Client sends a Request to the server, server sends a response back to the client.&#xA;REST, or Representational State Transfer, is the most popular way to communicate with these web servers.&#xA;REST is actually a set of rules and standards.</description>
    </item>
    <item>
      <title>Lython</title>
      <link>http://localhost:1313/posts/projects/lython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/projects/lython/</guid>
      <description>Created: July 19 2024 Modified: July 19 2024&#xA;Lython is my final project for my Masters program. I based it off an idea I had of giving my students a filtered AI, which branched off into editing ChatGPT with prompt filtering. Seeing that alone was particularly easy, I looked into implementing RAG, which works kind of.&#xA;Github&#xA;Below is my submission.&#xA;Previous&#xD;Next &amp;nbsp; &amp;nbsp;&#xD;/ [pdf]&#xD;View the PDF file here.</description>
    </item>
  </channel>
</rss>
