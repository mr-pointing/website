<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Classes on Mr. Pointing</title>
    <link>https://mrpointing.com/tags/classes/</link>
    <description>Recent content in Classes on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 11 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mrpointing.com/tags/classes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Inheritance</title>
      <link>https://mrpointing.com/notes/computer-science/python/advanced-python/inheritance/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/python/advanced-python/inheritance/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;According to the AI road map I&amp;rsquo;ve been following, this and the rest of the concepts in this folder are meant to be considered more advanced concepts. Some of these have been covered in the &lt;a href=&#34;https://mrpointing.com/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/&#34;&gt;Python Tutorial&lt;/a&gt;, some have not. This is the starting note, but I won&amp;rsquo;t link these concepts together unless necessary, as the concepts aren&amp;rsquo;t explicitly tied together.&lt;/p&gt;&#xA;&lt;h1 id=&#34;what-is-inheritance&#34;&gt;What is Inheritance?&lt;/h1&gt;&#xA;&lt;p&gt;Inheritance is the concept that you can build a new class based off of, or &lt;em&gt;derived&lt;/em&gt; from, an existing class. You can actually build one based off many, and the syntax is as follows;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How To Use @dataclass in Python</title>
      <link>https://mrpointing.com/notes/computer-science/videos/how-to-use-@dataclass-in-python/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/videos/how-to-use-@dataclass-in-python/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=mVea6Mu15l8&#34;&gt;Link&lt;/a&gt; to video.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Can be faster than creating a regular class.&lt;/p&gt;&#xA;&lt;p&gt;How classes are typically written:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Fruit&lt;/span&gt;:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, name: str, calories: float):  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;calories &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calories  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;banana &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Fruit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Banana&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can do the same with a &lt;code&gt;dataclass&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; dataclasses &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dataclass&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@dataclass&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Fruit&lt;/span&gt;:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name: str  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    calories: float  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;banana &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Fruit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Banana&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the first example, we wouldn&amp;rsquo;t be able to print it nicely without writing a &lt;code&gt;__str__&lt;/code&gt; representation, but here, we can print out &lt;code&gt;banana&lt;/code&gt; and get &lt;code&gt;Fruit(name=&#39;Banana&#39;, calories=10)&lt;/code&gt;, which looks much nicer. You could also set &lt;code&gt;float = 10&lt;/code&gt; so that calories are set to 10 by default.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 9</title>
      <link>https://mrpointing.com/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;classes&#34;&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/28/2024&lt;/p&gt;&#xA;&lt;p&gt;Classes combine data storage and functionality into one package. When you make a new class, you are making a new &lt;em&gt;type&lt;/em&gt; of object. A new &lt;em&gt;instance&lt;/em&gt;, or occurrence of that type are able to be made using function call of the class.&lt;/p&gt;&#xA;&lt;p&gt;A class is made up of attributes and methods defined by the classes definition.&lt;/p&gt;&#xA;&lt;p&gt;Python classes follow closely to other Object Oriented Programming languages classes in the following ways:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
