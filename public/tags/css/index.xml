<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Mr. Pointing</title>
    <link>http://localhost:1313/tags/css/</link>
    <description>Recent content in Css on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 19 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advanced CSS Selectors</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/advanced-css-selectors/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/advanced-css-selectors/</guid>
      <description>In some occasions, using classes, ID&amp;rsquo;s, or types are not enough. This is about those times. There are a bunch, but we&amp;rsquo;re just going to look at a few.&#xA;Child and Sibling Combinators Given the following:&#xA;&amp;lt;main class=&amp;#34;parent&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;child group1&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;grand-child group1&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;child group2&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;grand-child group2&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;child group3&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;grand-child group3&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/main&amp;gt; If we wanted to access all of the div elements inside of main, we can do so in a few different ways.</description>
    </item>
    <item>
      <title>The Odin Project</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/</guid>
      <description>Notes taken during lessons on The Odin Project</description>
    </item>
    <item>
      <title>Fundamental CSS Properties</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/fundamental-css-properties/</link>
      <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/fundamental-css-properties/</guid>
      <description>Since there are a ton of CSS properties, you don&amp;rsquo;t and shouldn&amp;rsquo;t memorize all of them. Let&amp;rsquo;s review a few of the most common and useful ones to make your websites stand out.&#xA;Background The background property is used mostly as is to set colors and styles to the background frame. However, you actually can use specific background-properties, which effect more specific elements in your background. You can go through exactly what you can do with that in this documentation.</description>
    </item>
    <item>
      <title>Text Styles</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/text-styles/</link>
      <pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/text-styles/</guid>
      <description>Getting New Fonts If you decided that you wanted to use a custom font for your website, unless the person viewing your site also has that font downloaded, it will default to the standard HTML font. To avoid this, it&amp;rsquo;s common practice to use a system font stack;&#xA;body { font-family: system-ui, &amp;#34;Segoe UI&amp;#34;, Roboto, Helvetica, Arial, sans-serif, &amp;#34;Apple Color Emoji&amp;#34;, &amp;#34;Segoe UI Emoji&amp;#34;, &amp;#34;Segoe UI Symbol&amp;#34;; } This will allow your site to have numerous back-up styles, in the off chance your user doesn&amp;rsquo;t have access to that font.</description>
    </item>
    <item>
      <title>CSS Units</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/css-units/</link>
      <pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/css-units/</guid>
      <description>There are mainly two types of ways to define sizes in CSS; absolute and relative. Absolute units are any measurement where the size will retain the same size no matter what; regardless of the other elements on screen, and screen size. The only absolute unit that should be in use is pixels, or px.&#xA;The other, relative, change based on a few factors. When using text, you&amp;rsquo;ll want to use rem or em, but most likely just rem.</description>
    </item>
    <item>
      <title>Flexbox and Tables</title>
      <link>http://localhost:1313/notes/computer-science/front-end/the-odin-project/flexbox-and-tables/</link>
      <pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/front-end/the-odin-project/flexbox-and-tables/</guid>
      <description>When progressing through the Odin Project, I went directly into the Full Stack JavaScript path, which started with SVGs and continues with Tables. I did see one topic I didn&amp;rsquo;t remember from the beginner path; flexboxes. My HTML is rusty, so I decided to read that article before hopping into tables. I thought why not combine them, since it was a quick read.&#xA;Essentially, flex is a way of organizing content on a web page so that it can be uniform and behavior is expected/controlled.</description>
    </item>
  </channel>
</rss>
