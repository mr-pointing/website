<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mr. Pointing</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 12 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rhythm of War</title>
      <link>http://localhost:1313/notes/entertainment/books/rhythm-of-war/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/rhythm-of-war/</guid>
      <description>Previous: Dawnshard&#xA;Wow. Completely floored that I was so captivated by this entry. I began as a book 4 hater; it felt like so much had been accomplished in the first three, what else could possibly happen to our cast of characters? Well, it turns out, a lot can happen and change, which is a recurring theme not only throughout this series, but especially in this one. Almost all of our main characters are going through internal and external factors that push them to make decisions, some life-altering, others not so much.</description>
    </item>
    <item>
      <title>Day 11</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-11/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-11/</guid>
      <description>Goal From Yesterday:&#xA;Set up text message for request Client Artist Accept Request &amp;amp; Booking Feature &amp;ldquo;Accept&amp;rdquo; button HTML site Booking HTML site Booking Python file (refactor requests to make recs_books?) Accomplishments I got a Twilio phone number waiting to be verified, added the booking form and all the logic to get there, as well as fixed a small issue where requests were stuck and would re-send after refreshing the page.</description>
    </item>
    <item>
      <title>Day 10</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-10/</link>
      <pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-10/</guid>
      <description>Goal From Yesterday:&#xA;Set up text message for request Client Artist For Today:&#xA;Accept Request &amp;amp; Booking Feature &amp;ldquo;Accept&amp;rdquo; button HTML site Booking HTML site Booking Python file (refactor requests to make recs_books?) Accomplishments Set up the text messaging API account.&#xA;Problems or Issues Next: Day 11</description>
    </item>
    <item>
      <title>Arch Linux on Virtual Machine</title>
      <link>http://localhost:1313/projects/arch-linux-on-virtual-machine/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/arch-linux-on-virtual-machine/</guid>
      <description>After running my laptop on Ubuntu for the past 4 months (and enjoying it) I figured it was time to give some other distros a chance. One of the YouTube channels I watch in order to expand my horizons is Mischa van den Burg who specializes in cloud computing dev ops things. I&amp;rsquo;ve watched a ton of his videos and got inspired to learn more about dev ops mostly through his influence.</description>
    </item>
    <item>
      <title>Day 9</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-9/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-9/</guid>
      <description>Goal From Last Week:&#xA;Format the Email back to client For Today:&#xA;Set up email to Client w/ request form Set up email to Admin saying there&amp;rsquo;s a new request w/ client info Set up text messages for both Accomplishments I was able to get a decent chunk of things today for today. One thing that I&amp;rsquo;m trying to to stress is the prettification of all of my elements. I got the emails working, but they look like crap.</description>
    </item>
    <item>
      <title>Day 8</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-8/</link>
      <pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-2/day-8/</guid>
      <description>Goal From Yesterday:&#xA;Format the Email back to client Accomplishments Problems or Issues Tattooed today, so maybe today will be nice free day?&#xA;Next: Day 9</description>
    </item>
    <item>
      <title>Day 7</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-7/</link>
      <pubDate>Sat, 07 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-7/</guid>
      <description>Goal From Yesterday:&#xA;Format the Email back to client Accomplishments I didn&amp;rsquo;t get to work on this project much this weekend, and honestly I feel kind of okay about it? I am going to be putting off the AI roadmap on hold until this month is over to see if that helps with my workflow. This week I tried to do both and it left me really wanting to pick one over the other, so perhaps I&amp;rsquo;ll just leave the AI roadmap stuff on the back burner while I work hard on the next few days.</description>
    </item>
    <item>
      <title>Day 6</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-6/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-6/</guid>
      <description>Goal From yesterday:&#xA;Test email sending/receiving Format the Email back to client Accomplishments Today was a very busy work day, so I really didn&amp;rsquo;t get that far on anything. The biggest thing I did was I was able to locate the right documentation to help out with the next few steps. Otherwise, not a whole lot got done today.&#xA;Problems or Issues When running the Gmail quickstart code, I neglected to realize you would need to change the SCOPE list variable to allow more authorizations.</description>
    </item>
    <item>
      <title>Sending Emails from Python</title>
      <link>http://localhost:1313/notes/computer-science/python/advanced-python/sending-emails-from-python/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/advanced-python/sending-emails-from-python/</guid>
      <description>As shown in one of the chapter 10 in the Python Tutorial, we can send emails over a built-in smtplib module that you can send emails with. You can find a basic example there. In wanting to implement a email to the tattoo booking app, I wanted to do a tutorial on how I can set it up so that emails are sent from the tattoo artist&amp;rsquo;s email address, so it would be easy for the client to respond.</description>
    </item>
    <item>
      <title>Day 5</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-5/</link>
      <pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-5/</guid>
      <description>Goal From yesterday:&#xA;View Request Page (Admin page for Sarah) Work on getting pictures to display Test and integrate email to client &amp;amp; Sarah w/ request form Format the Email back to client Accomplishments Work Time: 1hr&#xA;So far so okay. I was able to finally get the images working, but I had to rely on ChatGPT for help since none of the videos I watched were able to really help.</description>
    </item>
    <item>
      <title>Day 4</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-4/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-4/</guid>
      <description>Goal From yesterday:&#xA;View Request Page (Admin page for Sarah) Work on the JOIN to bring client info along with each request Work on getting pictures to display Test and integrate email to client &amp;amp; Sarah w/ request form Format the Email back to client Accomplishments Work Time: 1hr 20&#xA;Not my best day, but to be expected. Today wasn&amp;rsquo;t one of my best days, so I shouldn&amp;rsquo;t be too hard on myself.</description>
    </item>
    <item>
      <title>Day 3</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-3/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-3/</guid>
      <description>Goal From yesterday:&#xA;View Request Page (Admin page for Sarah) Python file (Flask View) HTML file (formatting) Work on the JOIN to bring client info along with each request For today:&#xA;Test and integrate email to client &amp;amp; Sarah w/ request form Format the Email back to client Accomplishments Work Time: 2 hours&#xA;While I didn&amp;rsquo;t get that much done as far as my lists are concerned, I was able to get a lot done today.</description>
    </item>
    <item>
      <title>Sorting Techniques</title>
      <link>http://localhost:1313/notes/computer-science/python/advanced-python/sorting-techniques/</link>
      <pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/advanced-python/sorting-techniques/</guid>
      <description>Link to article&#xA;Sorting Basics There are two basic ways we can ascending sort (organize from least to greatest on value) built into Python, .sort() on a list object, and the sorted() function, which takes in any iterable sequence.&#xA;sorted() will actually return the sequence in order, while .sort() is more of a step to be done, and will actually return None.&#xA;&amp;gt;&amp;gt;&amp;gt; a = [3, 6, 1, 4] &amp;gt;&amp;gt;&amp;gt; sorted(a) [1, 3, 4, 6] &amp;gt;&amp;gt;&amp;gt; a.</description>
    </item>
    <item>
      <title>Day 1</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-1/</link>
      <pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-1/</guid>
      <description>Goal Write down a step-by-step initial guide to follow to help track/maintain progress Complete the initial booking form Set up the SQLite database/schema Accomplishments Work Time: 1hr 45&#xA;So today was the first day and I feel like I was able to make some pretty decent progress. I created a really simple step-by-step guide to keep me on track, and to make the scope less creepy. I also was able to get a working schema for my tables, and I currently have user for Sarah, client for all people who book, and a requests for initial requests.</description>
    </item>
    <item>
      <title>Day 2</title>
      <link>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-2/</link>
      <pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/30-day-coding-challenge/week-1/day-2/</guid>
      <description>Goal From yesterday:&#xA;Complete the initial booking form For today:&#xA;Allow Images to be stored in SQLite database View Request Page (Admin page for Sarah) Accomplishments Work Time: 1hr 30&#xA;I got a lot done today, or at least it feels like it. First up, I messed around with the CSS Cursor gave me and tried to play with the setting up of the text entry fields for the requests.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 9</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-9/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-9/</guid>
      <description>Three Way Merges Every merge we&amp;rsquo;ve done so far has been a fast-forward merge. In this chapter, we&amp;rsquo;re going to take a look at performing our first three way merge, and also get some hands on experience with how editing our files out of order will affect our work flow. First, let&amp;rsquo;s simplify our visualization and update it to reflect where we left off in the last chapter;&#xA;Again, three way merges are important and necessary to understand.</description>
    </item>
    <item>
      <title>13. Roman to Integer</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/13.-roman-to-integer/</link>
      <pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/13.-roman-to-integer/</guid>
      <description>Question: Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.&#xA;Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000&#xA;For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</description>
    </item>
    <item>
      <title>Dawnshard</title>
      <link>http://localhost:1313/notes/entertainment/books/dawnshard/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/dawnshard/</guid>
      <description>Previous: Oathbringer&#xA;I&amp;rsquo;m not sure who keeps telling Brando Sando to keep making Novellas, but whoever it is needs to actually read them. I really can&amp;rsquo;t justify this being it&amp;rsquo;s own story. Even more than the first, this felt like a different type of filler. Filler with the audacity to be a hardcover.&#xA;My issues don&amp;rsquo;t come with the story at all really. I actually enjoyed Rysn, and thought every time she was on the page she felt real.</description>
    </item>
    <item>
      <title>Decorators</title>
      <link>http://localhost:1313/notes/computer-science/python/advanced-python/decorators/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/advanced-python/decorators/</guid>
      <description>What is a Decorator? Essentially, a decorator, is a wrapping for function. It allows you to do something before and/or after a function is called. Let&amp;rsquo;s look at a super basic example;&#xA;def uppercase_word(function): def wrapper(): func = function() # call the function to get the return value make_upper = func.upper() return make_upper return wrapper Now, let&amp;rsquo;s say we make a really basic function to print text out;&#xA;def say_word(): return &amp;#34;say wooooord&amp;#34; We could print it out like this:</description>
    </item>
    <item>
      <title>Inheritance</title>
      <link>http://localhost:1313/notes/computer-science/python/advanced-python/inheritance/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/advanced-python/inheritance/</guid>
      <description>According to the AI road map I&amp;rsquo;ve been following, this and the rest of the concepts in this folder are meant to be considered more advanced concepts. Some of these have been covered in the Python Tutorial, some have not. This is the starting note, but I won&amp;rsquo;t link these concepts together unless necessary, as the concepts aren&amp;rsquo;t explicitly tied together.&#xA;What is Inheritance? Inheritance is the concept that you can build a new class based off of, or derived from, an existing class.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 8</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-8/</link>
      <pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-8/</guid>
      <description>Cloning and Fetching As it stands, we have just pushed our local repo onto our remote repo, and updated it with all currently created branches. For this chapter, we&amp;rsquo;re going to start working through what it would be like if you&amp;rsquo;d like to start working on your project with a friend or coworker through an essential core concept of Git called cloning, or copying a remote repository.&#xA;Cloning a Remote Repository Like we know for the beginning of this text, Git is a major player in collaborative coding.</description>
    </item>
    <item>
      <title>Ring</title>
      <link>http://localhost:1313/notes/entertainment/books/ring/</link>
      <pubDate>Tue, 01 Jan 1991 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/ring/</guid>
      <description>One that&amp;rsquo;s been on my reading list since I was a kid and saw the dynamic spiral cover, Ring is the original book that inspired the prolific and perfectly-spoofed movie of the same name. Hearing this was a series made me nervous this wouldn&amp;rsquo;t be great, but I ended up enjoying it at some parts.&#xA;It went by really fast. The main character was the worst dude. Hated how much he clearly did not care about his wife and kids until he put them in danger.</description>
    </item>
    <item>
      <title>Flask&#39;s Tutorial</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-tutorial/</link>
      <pubDate>Wed, 06 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-tutorial/</guid>
      <description>Link to tutorial.&#xA;I was really hesitant to start this note, since I basically ran through this tutorial once already to start and complete my final project, Lython. However, since I&amp;rsquo;m starting Sarah&amp;rsquo;s site, and I want to test out a bunch of features/really get to understand Flask, let&amp;rsquo;s go through it once more.&#xA;Last time, I did a combination of going through the tutorial, then making changes as I saw fit.</description>
    </item>
    <item>
      <title>Deep Learning - Chapter 2</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/deep-learning/deep-learning---chapter-2/</link>
      <pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/deep-learning/deep-learning---chapter-2/</guid>
      <description>Linear Algebra This book covers all topics of linear algebra that are important to deep learning, not necessarily all topics within Linear Algebra. For a text more focused in linear algebra, see here.&#xA;Scalars, Vectors, Matrices, and Tensors Scalars Single numbers, usually denoted by a lowercase variable name, and introduced with some information on the number.&#xA;Ex.&#xA;Let $s \in R$ be the slope of the line for a real-valued scalar Let $n \in N$ be the number of units for a natural number scalar Vectors An ordered array of numbers, obtainable via the index position of the number in the array.</description>
    </item>
    <item>
      <title>Tkinter Tutorial</title>
      <link>http://localhost:1313/notes/computer-science/python/tkinter-tutorial/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/tkinter-tutorial/</guid>
      <description>Link to the tutorial.&#xA;Building Your First Application What makes Tkinter nice is that it&amp;rsquo;s a built-in library, meaning it should come with all versions of Python 3.12. If you&amp;rsquo;re using Ubuntu (like me) for this example you will have to install it but it doesn&amp;rsquo;t take long at all (sudo apt-get install python3-tk).&#xA;Creating your first window is incredibly simple. The following code will get you up and running in no time:</description>
    </item>
    <item>
      <title>Deep Learning - Preface</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/deep-learning/deep-learning---preface--chapter-1/</link>
      <pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/deep-learning/deep-learning---preface--chapter-1/</guid>
      <description>Preface MIT Press Online Edition Ian Goodfellow, Yoshua Bengio, and Aaron Courville Link to the book.&#xA;Chapter 1 Introduction This book is intended to prepare you for concepts and theory used in Machine Learning and Artificial Intelligence, more specifically deep learning, or the multi-layered stacked concepts that make up the intelligence of an AI model.&#xA;Like most textbooks, it goes into the why of AI, and what they do best; solving problems that humans are generally not good at.</description>
    </item>
    <item>
      <title>Introduction to Computer Networking</title>
      <link>http://localhost:1313/notes/computer-science/internet-and-it/coursera/introduction-to-computer-networking/</link>
      <pubDate>Wed, 23 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/internet-and-it/coursera/introduction-to-computer-networking/</guid>
      <description>TCP/IP and the Five Layer Network Model Below is a basic table outlining the five layers:&#xA;Layer Name Protocol Protocol Data Unit Addressing Application HTTP, SMTP, etc. Messages n/a Transport TCP/UDP Segment Port #&amp;rsquo;s Network IP Packet/Datagram IP Addresses Data Link Ethernet, Wi-Fi Frames MAC Address Physical n/a Bits n/a Physical Layer: The actual computing device(s) and the cables that connect them, sends and receives signals Data Link Layer: Also known as the network access layer, it&amp;rsquo;s our first protocol to interpret signals sent from and to each computing device Ethernet is our first and most common protocol, which is responsible for transporting data across the network Network Layer: Also know as the internet layer, this layer is what actually allows the computing devices to communicate with each other.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 7</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-7/</link>
      <pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-7/</guid>
      <description>Creating and Pushing to a Remote Repository Currently, we have three commits, red, orange, and yellow. We have two branches, both of them (head and feature) pointing at our yellow commit, and HEAD is attached to main.&#xA;Now that we&amp;rsquo;re beginning to talk about remote repositories, it&amp;rsquo;s important to understand how these projects are started. We&amp;rsquo;ve been working on our Rainbow project, which we know is a local repository.</description>
    </item>
    <item>
      <title>Do Androids Dream of Electric Sheep</title>
      <link>http://localhost:1313/notes/entertainment/books/do-androids-dream-of-electric-sheep/</link>
      <pubDate>Mon, 01 Jan 1968 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/do-androids-dream-of-electric-sheep/</guid>
      <description>Not remembering much from my initial watch of Blade Runner, I wasn&amp;rsquo;t sure what to expect going into this one. I did really enjoy A Scanner Darkly by Dick, so I expected to like this one despite not knowing much. I was not disappointed, and after blowing through this in 2 days I can say I really enjoyed it.&#xA;The philosophical questions presented combined with the loose answers they provide were interesting and engaging enough for me to think about throughout the read.</description>
    </item>
    <item>
      <title>Technical Support Fundamentals</title>
      <link>http://localhost:1313/notes/computer-science/internet-and-it/coursera/technical-support-fundamentals/</link>
      <pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/internet-and-it/coursera/technical-support-fundamentals/</guid>
      <description>I started this Corsera course in hopes of getting a certification (and that helping me get a job). I&amp;rsquo;m going to assume it&amp;rsquo;s similar to Khan Academy&amp;rsquo;s courses, but we&amp;rsquo;ll find out if completing it helps or not after the fact.&#xA;What is IT Support? The people behind the scenes helping Information Technology (IT) run and troubleshoot issues. Digital literacy is the &amp;ldquo;defining factor&amp;rdquo; that makes a good IT support technician.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 16</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-16/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-16/</guid>
      <description>Creating Tables One of the hardest things to do in data science (at least, to me) is pick up another person&amp;rsquo;s collected data. It will often take a few minutes of &amp;ldquo;getting calibrated&amp;rdquo; to understand the rows from simple things like understanding naming conventions (some are really bad) to more complex things like what story the data is telling.&#xA;The more complicated problems will end up needing some visualization tools which is something we&amp;rsquo;ll look at later, so for now let&amp;rsquo;s not think too big.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 17 &amp; 18</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-17--18/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-17--18/</guid>
      <description>Altering Tables If you need to include additional information not provided by the original tables creation statement, you can use an ALTER TABLE statement to manipulate and create columns.&#xA;Adding Columns Extremely similar to how we add in new rows, adding in a new column uses the following syntax:&#xA;ALTER TABLE mytable ADD column DataType OptionalTableConstraint DEFAULT default_value; We specify a table we want to add into, provide the column&amp;rsquo;s name and datatype, and we have the option for a table constraint and default value if needed.</description>
    </item>
    <item>
      <title>SQLite Tutorial</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlite-tutorial/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlite-tutorial/</guid>
      <description>What is a Database? Essentially, a database is a place in which your data and tables exists, organized in a way described by the database schema.&#xA;There are many database platforms that use SQL as their main language; MySQL, NoSQL, Microsoft SQL Server, just to name a few. The one we&amp;rsquo;re going to work with due to it&amp;rsquo;s ease of use and lightweight installation is SQLite (appropriately named).&#xA;Creating Our First Database Connection We can actually use SQLite directly inside of PyCharm, our IDE.</description>
    </item>
    <item>
      <title>Products of Array Not Including Self</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/products-of-array-not-including-self/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/products-of-array-not-including-self/</guid>
      <description>Question: Given an integer array nums, return an array output where output[i] is the product of all the elements of nums except nums[i].&#xA;How to Solve: I originally thought I had an awesome solution, but it only passed with the first test case that didn&amp;rsquo;t have zeros:&#xA;def productExceptSelf(self, nums: List[int]) -&amp;gt; List[int]: total = nums[0] * nums[1] ans = [] i = 2 while i &amp;lt; len(nums): total *= nums[i] i += 1 for num in nums: if num !</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 13</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-13/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-13/</guid>
      <description>Inserting Rows When we first started going over SQL databases, we just understood them as basic tables with columns of properties and rows of instances. The next step up is the Database Schema, which describes all tables in a database and the datatypes those rows can contain.&#xA;Because each row has defined types that are allowed, it keeps the database cleaner and easier to navigate.&#xA;Our first non-SELECT statement, we can start to insert data into our tables using the INSERT statement:</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 14 &amp; 15</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-14--15/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-14--15/</guid>
      <description>Updating Rows If we can SELECT rows, and INSERT data into rows, we can most certainly UPDATE them as well.&#xA;UPDATE works similarly to INSERT, and needs a WHERE clause to specify which rows should be updated:&#xA;UPDATE mytable SET column = value_or_expression other_column = value_or_expression ... WHERE condition; Obviously, like INSERT, the values or expressions returned should match the data type of the expected column/property.&#xA;A helpful tip is to always try a SELECT statement out first to make sure you are grabbing all the rows you think you want before you make any changes.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 10 &amp; 11</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-10--11/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-10--11/</guid>
      <description>Queries with Aggregates Aggregates are analogous with built-in functions. They&amp;rsquo;re helpful pieces of code we can use to make writing our queries easier. The syntax is as follows:&#xA;SELECT AGG_FUNC(column_or_expression) AS agg_description FROM mytable WHERE constraint_expression; With the previous syntax, we would use said function over all rows and return a single result. Here are some functions we&amp;rsquo;ll use:&#xA;COUNT(column or *): returns the number of rows if no columns specified, otherwise returns number of non-NULL values in chosen column MIN(column): returns smallest numerical value for all rows in group MAX(column): returns largest numerical value for all rows in group AVG(column): returns average numerical value for all rows in group SUM(column): returns sum of all numerical values for all rows in the group There&amp;rsquo;s another concept we should look at called grouped aggregate functions, which instead of returning values for all rows, allows you to return multiple values based upon a specified delimiter or group.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 12</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-12/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-12/</guid>
      <description>Order of Execution The order of execution within queries is important to understand. When getting unexpected output one of the first things you should check is your syntax and be sure you 100% know what you&amp;rsquo;re saying/what you expect to get back. If you aren&amp;rsquo;t writing complete or correct sentences, you&amp;rsquo;ll never get correct responses.&#xA;The following syntax is the complete structure for a query and is executed sequentially (one after the other):</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 9</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-9/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-9/</guid>
      <description>Queries with Expressions Now that we understand the basics of querying, we can really start to dive deeper by building more complex statements as expressions. These expressions can be mathematical or even basic string functions.&#xA;When writing expressions, we should use the AS keyword to create an alias for our expression, which makes our statements easier to read. This can be used on columns or tables.&#xA;The following statement is a great example of an expression:</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 7</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-7/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-7/</guid>
      <description>Outer Joins vs. Inner Joins Any table from an INNER JOIN will only contain information that belongs in BOTH tables. These can be limiting, which is where LEFT, RIGHT, and FULL JOIN&amp;rsquo;s come into the picture.&#xA;Our syntax for a standard expression doesn&amp;rsquo;t change, only get&amp;rsquo;s different options for our JOIN keyword.&#xA;SELECT column, another_table_column, ... FROM mytable INNER/LEFT/RIGHT/FULL JOIN another_table ON mytable.id = another_table.id WHERE condition(s) ORDER BY column, .</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 8</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-8/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-8/</guid>
      <description>NULL Values Unfortunately, working with data is an easy way to see that we don&amp;rsquo;t live in a perfect world. There are more than a few instances of there not being any data available to display, which can cause all sorts of issues with our queries. These values are what we call NULLS*, and can differ depending on your situation.&#xA;Most often at the start, we can leave them as NULL.</description>
    </item>
    <item>
      <title>Appendix A</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/appendix-a/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/appendix-a/</guid>
      <description>Summations As we know, we analyze algorithms by their running time. When algorithms use for or while loops (iterative structures), the running time is expressed as the sum of all the times spent on execution.&#xA;Summation Formulas and Properties Say we have $a_1,a_2,&amp;hellip;a_n$ numbers, what we call a sequence. While $n$ is a non-negative integer, we can say the sum of that set is $\sum_{k=1}^{n}a_k$.&#xA;If $n=0$, value is 0.</description>
    </item>
    <item>
      <title>Introduction to Algorithms - Chapter 3</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-3/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-3/</guid>
      <description>Characterizing Running Times As we saw in Chapter 2, order of growth gives us the ability to quantify the effectiveness of our algorithms, and compare them.&#xA;Us studying these algorithms at large enough input sizes is us studying the asymptotic efficiency of an algorithm. We can say an algorithm that is &amp;ldquo;more asymptotically efficient&amp;rdquo; is the better choice for most cases, save small inputs.&#xA;O-notation, $\Theta$-notation, and $\Omega$-notation We already met $\Theta$-notation in chapter 2; this is a type of asymptotic notation.</description>
    </item>
    <item>
      <title>Exploratory Data Analysis with Pandas</title>
      <link>http://localhost:1313/notes/computer-science/python/exploratory-data-analysis-with-pandas/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/exploratory-data-analysis-with-pandas/</guid>
      <description>Link to article</description>
    </item>
    <item>
      <title>Learning Git - Chapter 6</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-6/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-6/</guid>
      <description>Hosting Services and Authentication Everything we&amp;rsquo;ve done up until this point has been local. Even though some of the things we&amp;rsquo;ve looked at incentive&amp;rsquo;s working in a group, if your repository is local no one else will have access to it. This is where public repositories come into play.&#xA;There are three main players in the repository game; GitHub, GitLab, and Bitbucket. I personally only have experience with GitHub, so we&amp;rsquo;ll be focusing on that going forward.</description>
    </item>
    <item>
      <title>NumPy Quickstart</title>
      <link>http://localhost:1313/notes/computer-science/python/numpy-notes/numpy-quickstart/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/numpy-notes/numpy-quickstart/</guid>
      <description>Link to documentation.&#xA;Prerequisites What should you know to get the most out of this lesson? At the very least, the fundamentals of Python. You should also refer to this to get a fundamental understanding of the reasons why we&amp;rsquo;d want to use ndarray in the first place.&#xA;What are we doing this lesson then? We&amp;rsquo;re going to learn about what one, two, and $n$ dimensional arrays actually are, some algebra operations on ndarray objects without for loops, and even more advanced things like what axis and shape properties are.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 4</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-4/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-4/</guid>
      <description>Filtering and Sorting Results One way to ensure we don&amp;rsquo;t get duplicate rows, we could use the DISTINCT keyword;&#xA;SELECT DISTINCT column, another_column, ... FROM mytable WHERE condition(s); This however is pretty indiscriminate, and we&amp;rsquo;ll look at how to specify duplicates with GROUP BY later.&#xA;Often in the real world, our data is not going to be ordered nice and neatly. Quite often, data is inserted without rhyme or reason, and purely based off when some events happened and collected rather than compared to the rest of the data in the data set.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 6</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-6/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-6/</guid>
      <description>Multi-table Queries with JOINs Unlike the database we&amp;rsquo;ve been using for most of these lessons, real world data is usually divided into different tables, often through a process we call normalization. Normalization is the procedure used to break down large tables into smaller more organic tables. This reduces duplicate data, and allows for a more natural growth of data within respective tables.&#xA;Due to our data being broken up, our queries will in turn have to become more complex to grab information over multiple tables.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 2</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-2--3/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-2--3/</guid>
      <description>Specifying Data to Select (Constraints) When our table has only a few rows, a select * query isn&amp;rsquo;t so bad. However, if we have hundreds, sometimes thousands of rows of data, retrieving all of them at once becomes an issue.&#xA;That reason is why we have the ability to specify our results with conditional statements:&#xA;SELECT column, another_column, ... FROM mytable WHERE condition AND/OR another_condition AND/OR ...; We can collect more complex results from building more complex queries.</description>
    </item>
    <item>
      <title>Note Taking Methods</title>
      <link>http://localhost:1313/notes/obsidian/note-taking-methods/</link>
      <pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/note-taking-methods/</guid>
      <description>PARA Method Link to notes.&#xA;Projects, Areas, Resources, and Archives.&#xA;Projects: Short term efforts in your work or life that you&amp;rsquo;re actively working on&#xA;Think of the things you want to accomplish in the short-term. A few days to a few weeks of effort. Think:&#xA;Completing a coding project (website, utility) Purchase a new computer/phone/tv Reorganize your room/locker Finishing a school project Area: Long-term responsibilities you want to manage over time</description>
    </item>
    <item>
      <title>Contains Duplicate</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</guid>
      <description>Question: Given an integer array nums, return true if any value appears more than once in the array, otherwise return false.&#xA;How to Solve: We can create a secondary list that we can start to throw the values from our array nums into, and check to see if they already exist in the list or not. As soon as we enter a number that already exists in our list, it will return True and end.</description>
    </item>
    <item>
      <title>Two Integer Sum</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</guid>
      <description>Question: Given an array of integers nums and an integer target, return the indices i and j such that nums[i] + nums[j] == target and i != j.&#xA;You may assume that every input has exactly one pair of indices i and j that satisfy the condition.&#xA;Return the answer with the smaller index first.&#xA;How to Solve: We can use a two pointer approach with i and j. First, we set up a for loop that will iterate j from the length of the array to the first position.</description>
    </item>
    <item>
      <title>Valid Anagram</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-anagram/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-anagram/</guid>
      <description>Question: Given two strings s and t, return true if the two strings are anagrams of each other, otherwise return false.&#xA;An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.&#xA;How to Solve: We essentially need to compare two strings and see if the amount of characters are the same for each word. There are probably a few ways to do that, but I went for the extremely direct approach.</description>
    </item>
    <item>
      <title>Edgedancer</title>
      <link>http://localhost:1313/notes/entertainment/books/edgedancer/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/edgedancer/</guid>
      <description>Previous: Words of Radiance&#xA;Definitely a novella that took me too long to finish, and not really because I was enjoying it. More so because I didn&amp;rsquo;t love Lift as a character. I was actually going to say I didn&amp;rsquo;t hate their childish behavior, but typing that out I had a gut feeling I wasn&amp;rsquo;t being honest with myself.&#xA;I really didn&amp;rsquo;t like how childish Lift was. Maybe that was her point, but I didn&amp;rsquo;t seem to grasp onto the story.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 5</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-5/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-5/</guid>
      <description>Merging We last looked at how branches can help a team work on a project together, without losing or any conflicting progress. Now for the logical next step- combining the work together into one branch. We call this merging, or the combining of work from different branches.&#xA;The source branch is the merging branch, or where the work is coming from. The target branch is the branch you&amp;rsquo;re merging into.</description>
    </item>
    <item>
      <title>Oathbringer</title>
      <link>http://localhost:1313/notes/entertainment/books/oathbringer/</link>
      <pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/oathbringer/</guid>
      <description>Holy Moly. What a ride. This book took FOREVER to finish. Exactly 3 months and a day to be exact. But it was so worth it.&#xA;A true continuation from Words of Radiance, this book follows the logical progression from where that book left off and really begins to open up the world. There are still lots of secrets left to unfold (Who is Wit? Who is the Cremling God that Lift meets in Edgedancer?</description>
    </item>
    <item>
      <title>Pandas</title>
      <link>http://localhost:1313/notes/computer-science/python/pandas/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/pandas/</guid>
      <description> </description>
    </item>
    <item>
      <title>Python Problems</title>
      <link>http://localhost:1313/notes/computer-science/python/python-problems/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-problems/</guid>
      <description> </description>
    </item>
    <item>
      <title>SQLBolt - Introduction</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---introduction/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---introduction/</guid>
      <description>Link to lessons.&#xA;Introduction to SQL What is SQL? Structured Query Language is a language used to create, maintain, and use relational databases. Thousands of applications from simple projects to Microsoft products use SQL through various formats and configurations.&#xA;Some use SQLite, MySQL, Postgres, Oracle, or Microsoft SQL, to name a few. Each use SQL as base, and include features that garner appeal from different developers.&#xA;Relational Databases A relational database is a collection of 2D tables that are linked through some key value.</description>
    </item>
    <item>
      <title>SQLBolt - Lesson 1</title>
      <link>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-1/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/sql/sqlbolt/sqlbolt---lesson-1/</guid>
      <description>When we want to get information for a SQL table, we use the SELECT statement, or a query. Within a query is what data we want, where to get it from, and any additional formatting we want done before we get said data.&#xA;When selecting information from a table, we have to understand the make-up of a table. Let&amp;rsquo;s say we have a reptiles table. There might be different types of reptiles (snakes, lizards, turtles, crocodiles) but each reptile has characteristics that make it unique.</description>
    </item>
    <item>
      <title>Reading and Writing Python Files</title>
      <link>http://localhost:1313/notes/computer-science/python/reading-and-writing-files-with-python/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/reading-and-writing-files-with-python/</guid>
      <description>This is a more general file for Python input and output for files. I feel like I constantly need to look up this stuff, so things I find I&amp;rsquo;ll write down here for reference.&#xA;Reading in a CSV I was solving some Python Problems and needed to format easily from a CSV. I did a quick google and came across this article which reminded me Pandas has a easy CSV reader.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 4</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-4/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-4/</guid>
      <description>Branches We last left off with our first commit in our rainbow project. Remember, we can also use git status to get an update on the status of our repository. Before we get too deep into defining what a branch is, let&amp;rsquo;s explore why they&amp;rsquo;re used. That might make it a bit easier to understand.&#xA;Why Do We Use Branches? Branches help us differentiate changes in a given project. They can be made for an number of reasons, but can be boiled down to two main points:</description>
    </item>
    <item>
      <title>Obsidian Help - Plugins</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---plugins/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---plugins/</guid>
      <description>Core Plugins Out of the box, Obsidian has a plethora of usable features. Most you might never touch. Others will be ingrained in your workflow you&amp;rsquo;ll forget they&amp;rsquo;re plugins. This list is not extensive- like everything else, more detailed information can be found in their documentation.&#xA;Outgoing and Backlinks We already saw how powerful linking can be using Obsidian. Let&amp;rsquo;s define two specific types of links; outgoing links and backlinks.</description>
    </item>
    <item>
      <title>Obsidian Help - Editing and Formatting</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---editing-and-formatting/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---editing-and-formatting/</guid>
      <description>Editing and Formatting Congratulations, after this year you&amp;rsquo;ll technically know two languages! Markdown, what we&amp;rsquo;re writing in, isn&amp;rsquo;t technically a programming language, but it is a useful format to understand and be able to read, just in case something isn&amp;rsquo;t rendered or just browsing files.&#xA;Basic Formatting Syntax A paragraph is just a block of text, separated by a newline. The paragraph for a literal example:&#xA;This is a paragraph.</description>
    </item>
    <item>
      <title>Teaching with Obsidian</title>
      <link>http://localhost:1313/posts/teaching-with-obsidian/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/teaching-with-obsidian/</guid>
      <description>I&amp;rsquo;m not sure if it&amp;rsquo;s obvious to everyone, but as a teacher I noticed that students do not know how to take notes. At best a student is writing something down, albeit not very good notes. Most are not taking any notes at all.&#xA;This is a small band-aid fix, but I&amp;rsquo;m going to start implementing Obsidian as a minor section of my curriculum this year. Online notes are not a replacement for good handwritten note-taking, but for my Computer Science Honors kids it&amp;rsquo;s a good place to store code from lessons and start to think about what&amp;rsquo;s really important.</description>
    </item>
    <item>
      <title>Obsidian Help - User Interface</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---user-interface/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---user-interface/</guid>
      <description>User Interface A user interface, otherwise referred to as a UI, is the visual parts of a program you interact with when using it. For Obsidian, the UI is the entire window. Let&amp;rsquo;s break it down piece by piece.&#xA;Appearance Before we go any further, we should go over the fun part. Making it your own. If your left bar isn&amp;rsquo;t already open, hit the button on the top left (it&amp;rsquo;s a little square with lines in it).</description>
    </item>
    <item>
      <title>Obsidian Help - Getting Started</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---getting-started/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---getting-started/</guid>
      <description>Getting Started If you don&amp;rsquo;t know where to start, start here.&#xA;Downloading and Installing For the most part, you&amp;rsquo;ll have access to the computers at school all year long, so you can always get Obsidian through there. If however you want to get Obsidian going at home, look no further.&#xA;Install on Windows Click the link, then Universal and follow instructions.&#xA;Install on Mac Click the link, then Universal and follow instructions.</description>
    </item>
    <item>
      <title>Obsidian Help - Preface</title>
      <link>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---preface/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/obsidian-help/obsidian-help---preface/</guid>
      <description>Link to Documentation.&#xA;What is Obsidian? Essentially, a note-taking tool. All it boils down too is the format in which your notes are placed (I just think Obsidian is neat). Obsidian uses a Markdown, a markup-language. Not really a programming language, more of an encoding language, but we don&amp;rsquo;t need to worry about that for right now.&#xA;For now, all we are going to focus on is the basics-you have something you want to take notes on, and you write down your notes inside.</description>
    </item>
    <item>
      <title>Private GPT</title>
      <link>http://localhost:1313/projects/private-gpt/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/private-gpt/</guid>
      <description>Link to the project.&#xA;This really tested my time and patience. What should have taken me an hour took me closer to a day, but it was extremely worth the time investment. No mind blowing innovation going on, and certainly nothing I haven&amp;rsquo;t seen before, nevertheless gratifying to bring together.&#xA;The most frustrating issue was that the configuration for running setting up the llama model in Poetry was either wrong on the tutorial or my machine is weird.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 3</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-3/</link>
      <pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-3/</guid>
      <description>Making a Commit We left off with our first text file in our working directory, our rainbowcolors.txt file. It has one sentence in it, and we can check that by either opening it or running cat rainbowcolors.txt in the working directory. We can see that we haven&amp;rsquo;t made any commits yet, and we only have one untracked file. You can run git status to gather all of this info.</description>
    </item>
    <item>
      <title>Explaining my Obsidian to Hugo Workflow</title>
      <link>http://localhost:1313/posts/explaining-my-obsidian-to-hugo-workflow/</link>
      <pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/explaining-my-obsidian-to-hugo-workflow/</guid>
      <description>Where We Left Off I was just able to get my website viewable for the first time in Hugo&amp;rsquo;s draft view. I worked through the formatting errors that my Hugo theme wasn&amp;rsquo;t compatible with, and everything is looking good.&#xA;Implementing Git was also incredibly simple. If you don&amp;rsquo;t know anything about Git, you can start by reading my analysis of a beginner Git textbook. Since Hugo requires you using a separate directory for content, just initialize a new repo in your directory, connect it to a GitHub repo, and you&amp;rsquo;re off to the races.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 2</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-2/</link>
      <pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-2/</guid>
      <description>Local Repositories Introducing and Initializing a Local Repository A repository (or a repo) is the container of a project version controlled by Git. There are two; local and remote. Local is stored on your computer, while remote is obviously hosted remotely (someone else&amp;rsquo;s computer).&#xA;GitHub is one of the largest platforms and the one I&amp;rsquo;m most familiar with. GitLab and Bitbucket also exist, but I haven&amp;rsquo;t used them myself. Chapter 6 onward deals with this; for now, we can worry about it later.</description>
    </item>
    <item>
      <title>Linux File System-Structure Explained!</title>
      <link>http://localhost:1313/notes/computer-science/videos/linux-file-system-structure-explained/</link>
      <pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/linux-file-system-structure-explained/</guid>
      <description>Link to video.&#xA;Unlike Windows, the Linux file system is structured a lot differently.&#xA;/bin is the directory containing &amp;ldquo;binaries&amp;rdquo;, just another word for programs or applications. /bin contains programs like ls, grep, and all sorts of others.&#xA;/sbin</description>
    </item>
    <item>
      <title>Beautiful Soup</title>
      <link>http://localhost:1313/notes/computer-science/python/beautiful-soup/</link>
      <pubDate>Sat, 17 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/beautiful-soup/</guid>
      <description>Link to documentation.</description>
    </item>
    <item>
      <title>Learning Git - Chapter 1</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-1/</link>
      <pubDate>Sat, 17 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/learning-git/learning-git---chapter-1/</guid>
      <description>Git and the Command Line What is Git? Git is a version control system that keeps track of the changes done to a project or directory. When you edit a file, Git records what was added and removed. If files are added or removed, Git has it&amp;rsquo;s eyes on it (if you&amp;rsquo;re configuring it correctly).&#xA;Git was originally created by Linus Torvalds, the creator of Linux. Meant to be used at the command line, it is clearly more complex then a simply saving a file.</description>
    </item>
    <item>
      <title>My Hero Academia</title>
      <link>http://localhost:1313/notes/entertainment/manga/my-hero-academia/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/manga/my-hero-academia/</guid>
      <description>by Kohei Horikoshi 2014 - 2024&#xA;Ah man. Ten years of My Hero. Crazy to think of where I was at 10 years ago, in High School myself, seeing these characters grow. Grow up into being one of the most meh pieces of work I&amp;rsquo;ve ever followed.&#xA;It&amp;rsquo;s hard to even think of where My Hero fell off for me. I want to say it was watching alongside the anime and not really loving it, to around the time Deku started to gain more powers, nothing ever really felt memorable enough to make me want to catch up.</description>
    </item>
    <item>
      <title>AP Computer Science Principles - Unit 2</title>
      <link>http://localhost:1313/notes/computer-science/internet-and-it/khan-academy/ap-computer-science-principles---unit-2/</link>
      <pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/internet-and-it/khan-academy/ap-computer-science-principles---unit-2/</guid>
      <description>Unit 2: The Internet The internet is a global connection of computers communicating with one another. The constant flow of input and output keeps the internet going.&#xA;It&amp;rsquo;s an open system, meaning anyone can join given they follow the proper protocols. These include but aren&amp;rsquo;t limited too:&#xA;IP: Protocol for identifying IP addresses with some routing strategy to send and receive information TCP/UDP: Protocols that transfer packets of data that check for errors along the route TLS: Protocol for encrypting data HTTP &amp;amp; DNS: Protocols for internet browsers Even though we likely use the internet everyday, a lot of these protocols are so far abstracted that we hardly have to think about these.</description>
    </item>
    <item>
      <title>Flask&#39;s Templates</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-templates/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-templates/</guid>
      <description>Link to documentation.</description>
    </item>
    <item>
      <title>Starting My Website</title>
      <link>http://localhost:1313/posts/starting-my-website/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/starting-my-website/</guid>
      <description>As a first official post, why not start at the beginning. I want to quickly go over how I started, my motivations, and the first issues I ran into. The footnotes will reference all of the articles and videos I watched that helped contribute to how it works today.&#xA;Components Obsidian Git/GitHub Hugo Cloudflare How I Started Regarding Obsdian, I began writing as if I were dictating to my students.</description>
    </item>
    <item>
      <title>Current Obsidian Plugins</title>
      <link>http://localhost:1313/notes/obsidian/current-obsidian-plugins/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/current-obsidian-plugins/</guid>
      <description>Community Plugins Community plugins keep some pieces of software alive. When development stops on a product, often the users can keep producing forks of the initial project and continue developing their own functions and uses for the app. In Obsidian&amp;rsquo;s case, even while production is still going, they implore users to develop their own plugins to meet their own needs.&#xA;One thing should be stressed; community plugins should only be prioritized after learning the ins and outs of core Obsidian.</description>
    </item>
    <item>
      <title>Circuit Playground Express</title>
      <link>http://localhost:1313/projects/circuit-playground-express/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/circuit-playground-express/</guid>
      <description>I was listening to a podcast from Real Python that mentioned getting your hands on a Circuit Playground Express. It was in passing and I probably wouldn&amp;rsquo;t have ordered one, had I not seen one for sale at Micro Center for only $30.&#xA;From my understanding, it&amp;rsquo;s a very basic introduction to using circuit boards, and I got it mostly because of something called Circuit Python, which is a version of Python meant to introduce students and beginners into controlling single board computers (SBC&amp;rsquo;s).</description>
    </item>
    <item>
      <title>Mr. Pointing Website</title>
      <link>http://localhost:1313/projects/mr.-pointing-website/</link>
      <pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/mr.-pointing-website/</guid>
      <description>So, I want to make my website using Obsidian to write Markdown files, have Hugo collect and display them, then use Cloudflare to host it. I have a few things I know I need to get done:&#xA;Get pages formatted to look good on Hugo Add date property to all pages Get Excalidraw images linked Cloudflare Hugo Note Title Needs fixing Need to create something to format for Hugo&amp;rsquo;s scientific notation Intro to Algorithms Khan Academy Ignore Templates, re-route Excalidraw Get mr.</description>
    </item>
    <item>
      <title>Deploying a Flask Application via Apache</title>
      <link>http://localhost:1313/projects/deploying-a-flask-application-via-apache/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/deploying-a-flask-application-via-apache/</guid>
      <description>Modified: August 02 2024&#xA;Link to the project website.</description>
    </item>
    <item>
      <title>Cookies</title>
      <link>http://localhost:1313/notes/computer-science/internet-and-it/cookies/</link>
      <pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/internet-and-it/cookies/</guid>
      <description>Modified: August 02 2024&#xA;Link to Cloudflare, super helpful resource.&#xA;A cookie is a piece of data sent from a web server to a web browser filled with information about the client and session, created when the request was sent from the client to the server.&#xA;The three main reasons why you&amp;rsquo;d want to use cookies would be:&#xA;Session Info: Storing the session info in the cookie allows you to do things like refresh the page or link to another page without having to retype in your user information.</description>
    </item>
    <item>
      <title>Beginner Tutorial for Obsidian Dataview</title>
      <link>http://localhost:1313/notes/obsidian/beginner-tutorial-for-obsidian-dataview/</link>
      <pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/beginner-tutorial-for-obsidian-dataview/</guid>
      <description>Link to the video.</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:1313/notes/computer-science/hugo/getting-started-with-hugo/</link>
      <pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/hugo/getting-started-with-hugo/</guid>
      <description>Quick Start It&amp;rsquo;s remarkably easy to start using Hugo. So much so it makes me want to start working on my portfolio immediately.&#xA;To start, we need to use PowerShell instead of Windows PowerShell. Apparently, they are different.&#xA;You also need to have Git installed.&#xA;Once both are done, you can run the following commands:&#xA;hugo new site quicksite This creates a new directory that will become our new website.</description>
    </item>
    <item>
      <title>Introduction to Algorithms - Chapter 2</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-2/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-2/</guid>
      <description>Getting Sorted This chapter is meant to familiarize yourself with the framework used throughout the book.&#xA;2.1 Insertion Sort Solves a sorting problem (obviously).&#xA;The numbers to be sorted are known as keys.&#xA;The input comes in the form of an array with n elements.&#xA;A reason to sort is often because those keys are associated with other data, Satellite data.&#xA;Key + Satellite = Record&#xA;We can think of a spreadsheet, with student records having many pieces of data.</description>
    </item>
    <item>
      <title>AP Computer Science Principles - Unit 1</title>
      <link>http://localhost:1313/notes/computer-science/internet-and-it/khan-academy/ap-computer-science-principles---unit-1/</link>
      <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/internet-and-it/khan-academy/ap-computer-science-principles---unit-1/</guid>
      <description>Unit 1: Digital Information Most of this I should know, being a computer science teacher. However, outlining this should make teaching this rather boring portion easier. I want to try implementing more diagrams while I teach; I&amp;rsquo;ll be looking forward to stealing their ideas.&#xA;Bits and bytes How do computers represent data? All computers understand is Binary, 0&amp;rsquo;s and 1&amp;rsquo;s.&#xA;The video explains the example of using one single wire to transfer electricity through it; on or off.</description>
    </item>
    <item>
      <title>How to Start a Homelab for $0</title>
      <link>http://localhost:1313/notes/computer-science/videos/how-to-start-a-homelab-for-0/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/how-to-start-a-homelab-for-0/</guid>
      <description>Modified: July 19 2024&#xA;Link to video.&#xA;Building a Homelab is easier and more affordable than ever before.&#xA;You can start homelabbing with extra tech or cloud options.&#xA;Clustering, through something like Kubernetes, you can start small. One small machine, and expand as you grow. All you need is a command line and 2gb of RAM.&#xA;Self hosting might need something more stable.&#xA;One way to start is with an old laptop.</description>
    </item>
    <item>
      <title>How To Use @dataclass in Python</title>
      <link>http://localhost:1313/notes/computer-science/videos/how-to-use-@dataclass-in-python/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/how-to-use-@dataclass-in-python/</guid>
      <description>Modified: July 19 2024&#xA;Link to video.&#xA;Can be faster than creating a regular class.&#xA;How classes are typically written:&#xA;class Fruit: def __init__(self, name: str, calories: float): self.name = name self.calories = calories banana = Fruit(&amp;#39;Banana&amp;#39;, 10) We can do the same with a dataclass:&#xA;from dataclasses import dataclass @dataclass class Fruit: name: str calories: float banana = Fruit(&amp;#39;Banana&amp;#39;, 10) With the first example, we wouldn&amp;rsquo;t be able to print it nicely without writing a __str__ representation, but here, we can print out banana and get Fruit(name=&#39;Banana&#39;, calories=10), which looks much nicer.</description>
    </item>
    <item>
      <title>Lython</title>
      <link>http://localhost:1313/projects/lython/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/lython/</guid>
      <description>Lython is my final project for my Masters program. I based it off an idea I had of giving my students a filtered AI, which branched off into editing ChatGPT with prompt filtering. Seeing that alone was particularly easy, I looked into implementing RAG, which works kind of.&#xA;Github&#xA;I&amp;rsquo;d like to continue working on my project as an actual tool to use during class. I&amp;rsquo;d like to be able to launch it to a production server, so my students can access it during class.</description>
    </item>
    <item>
      <title>The Ultimate Guide to Writing Functions</title>
      <link>http://localhost:1313/notes/computer-science/videos/the-ultimate-guide-to-writing-functions/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/the-ultimate-guide-to-writing-functions/</guid>
      <description>Modified: July 23 2024&#xA;Link to video.&#xA;Tip 1: Do one thing, and do it well A function should perform a single task.&#xA;Think about the level of abstraction; the function should be on the same level of abstraction.&#xA;He brings up two examples, one of a function that iterates through a collection, checking each value against a matcher to return if one exists. He says this has two levels of abstraction; the iteration, and the comparison.</description>
    </item>
    <item>
      <title>Browsers HTTP and You!</title>
      <link>http://localhost:1313/notes/computer-science/videos/browsers-http-and-you/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/browsers-http-and-you/</guid>
      <description>Modified: July 19 2024&#xA;Link to video.&#xA;Request/Response Cycle It&amp;rsquo;s like a conversation. Client and server advertise capabilities and supported formats to one another.&#xA;HTTP is stateless, but the implementation will do state like things like caching. You need to see both sides of the conversation.&#xA;Anatomy of a request GET / HTTP/1.1 Host: localhost:8001 Request body. Anatomy of a response HTTP/1.0 200 OK X-Headers: Here Response body. Request headers Sent automatically&amp;hellip;when not doing Ajax</description>
    </item>
    <item>
      <title>Introduction to Algorithms - Chapter 1</title>
      <link>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-1/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/textbooks/introduction-to-algorithms/part-1/introduction-to-algorithms---chapter-1/</guid>
      <description>Modified: August 02 2024&#xA;The Role of Algorithms in Computing 1.1 Algorithms Algorithm: Any well defined computational procedure that takes some value, or set of values, as input and produces some value, or set of values, as output in a finite amount of time.&#xA;We often say algorithms help us solve computational problems.&#xA;We can define a sorting algorithm like so:&#xA;Input: A sequence of n numbers, {a_1, a_2, ... a_n}</description>
    </item>
    <item>
      <title>Templater Formatting Notes</title>
      <link>http://localhost:1313/notes/obsidian/templater-formatting-notes/</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/obsidian/templater-formatting-notes/</guid>
      <description>Link to Templater Documentation.</description>
    </item>
    <item>
      <title>You Can Do Really Cool Things With Functions in Python</title>
      <link>http://localhost:1313/notes/computer-science/videos/you-can-do-really-cool-things-with-functions-in-python/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/you-can-do-really-cool-things-with-functions-in-python/</guid>
      <description>Modified: July 15 2024&#xA;Link to video.&#xA;This video goes over some uncommon ways to use functions in Python. It uses the following code as a base:&#xA;&amp;#34;&amp;#34;&amp;#34; main.py &amp;#34;&amp;#34;&amp;#34; import statistics from dataclasses import dataclass from typing import Protocol from exchange import Exchange class TradingStrategy(Protocol): &amp;#34;&amp;#34;&amp;#34;Trading strategy that decides whether to buy or sell, given a list of prices&amp;#34;&amp;#34;&amp;#34; def should_buy(self, prices: list[int]) -&amp;gt; bool: raise NotImplementedError() def should_sell(self, prices: list[int]) -&amp;gt; bool: raise NotImplementedError() class AverageTradingStrategy: &amp;#34;&amp;#34;&amp;#34;Trading strategy based on price averages.</description>
    </item>
    <item>
      <title>Blinker</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/blinker/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/blinker/</guid>
      <description>Link to documentation.</description>
    </item>
    <item>
      <title>Click</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/click/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/click/</guid>
      <description>Link to the documentation.</description>
    </item>
    <item>
      <title>Jinja</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/jinja/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/jinja/</guid>
      <description>Link to documentation.</description>
    </item>
    <item>
      <title>The Road</title>
      <link>http://localhost:1313/notes/entertainment/books/the-road/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/the-road/</guid>
      <description>Modified: July 14 2024&#xA;I finished The Road a few days ago and I&amp;rsquo;ve reflected fondly on the experience. Slow burn isn&amp;rsquo;t the word I&amp;rsquo;d use; perhaps a slow agonizing death. Because by the end, I was emotionally exhausted. It asks a lot of you. Sit through the gray, dim world that the story takes place in. Hope to some God the end is worth it. In my opinion, I think it was.</description>
    </item>
    <item>
      <title>Werkzeug</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/werkzeug/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/werkzeug/</guid>
      <description>Link to documentation.&#xA;First of all, what is WSGI?&#xA;Web Server Gateway Interface, a specification that describes how a web server communicates with web applications, and how web applications can be chained together to process one request.</description>
    </item>
    <item>
      <title>Become a Shell Wizard in ~12 Minutes</title>
      <link>http://localhost:1313/notes/computer-science/videos/become-a-shell-wizard-in-~12-minutes/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/videos/become-a-shell-wizard-in-~12-minutes/</guid>
      <description>Modified: July 19 2024&#xA;Link to video.&#xA;The Basics of Shell Shell, terminal, console, command line, all are essentially the same thing.&#xA;Commands ls: lists out all items in the current (target) directory You can pass some flags to change the output -latrh will produce long list format, all files, sorted by time, in reverse, with human readable file sizes You can also use a path as an argument, as well as a combination of both flags and path cd: change directory pwd: shows path to current work directory echo: lets you print some text cat: lets you print the content of a file touch: creates a file if it doesn&amp;rsquo;t exist; changes the timestamp if it does cp: lets you copy a file or directory to a target destination move: like copy, but moves it instead rm: removes a file or directory Need to use -r to delete a directory You can add f to forcefully delete it ln: creates a symlink in a file to another location Similar to a reference object in programming less: lets you view text content in a scrollable format Often more useful than cat, since you can search easily more: less than less, but more on the screen and can only go forward man: shows the manual for the command you need Similar to using --help after a command One documentation I&amp;rsquo;d love to go through is note taking manual pages for all these commands.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 12</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</guid>
      <description>Modified: July 19 2024&#xA;Virtual Environments and Packages 12.1 Introduction Often, you&amp;rsquo;re going to need tools and modules that aren&amp;rsquo;t included with Python by default, or in your standard library. One Python install might not suffice for most applications.&#xA;To circumnavigate this, we create virtual environments, that act as self-contained directories with an installation of Python, and any number of packages.&#xA;12.2 Creating Virtual Environments We can use the venv module to create and manage our own virtual environment.</description>
    </item>
    <item>
      <title>PyCharm IDE Features</title>
      <link>http://localhost:1313/notes/computer-science/python/pycharm-ide-features/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/pycharm-ide-features/</guid>
      <description>Get Acquainted with PyCharm The project view is one of the main tool windows, containing the project directory, external libraries, and scratch files. You can also open it with Alt 1. The Python interpreter is easily viewable in the status bar in the bottom right. You can run, debug, or other option on the top right of the window. You can also press Shift F10. We got an unexpected error in our code, featured below.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 11</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</guid>
      <description>Modified: July 19 2024&#xA;The Standard Library - Part 2 7/9/2024&#xA;The second part here will go over more advanced, less common modules that nevertheless, exist.&#xA;11.1 Output Formatting reprlib is an appropriately named library containing a version of repr() modified for abbreviated displays of large or deeply nested containers:&#xA;&amp;gt;&amp;gt;&amp;gt; import reprlib &amp;gt;&amp;gt;&amp;gt; reprlib.repr(set(&amp;#39;supercalafragalisticexpialidocious&amp;#39;)) &amp;#34;{&amp;#39;a&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;,...&amp;#34; pprint is a module with more sophisticated control over printing both built-in and user defined objects.</description>
    </item>
    <item>
      <title>Raspberry Pi NAS</title>
      <link>http://localhost:1313/projects/raspberry-pi-nas/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/raspberry-pi-nas/</guid>
      <description>Link</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 10</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</guid>
      <description>Modified: July 19 2024&#xA;A Brief Tour of the Standard Library 7/4/2024&#xA;10.1 Operating System Interface The os module provides functions for interacting with operating systems:&#xA;&amp;gt;&amp;gt;&amp;gt; import os &amp;gt;&amp;gt;&amp;gt; os.getcwd() # returns the working directory &amp;#39;C:\\Python312&amp;#39; &amp;gt;&amp;gt;&amp;gt; os.chdir(&amp;#39;/server/accesslogs&amp;#39;) # change working directory &amp;gt;&amp;gt;&amp;gt; os.system(&amp;#39;mkdir today&amp;#39;) # run the command mkdir in the system shell 0 Never use from os import *. It&amp;rsquo;s not good practice to not do this regardless, but it will specifically keep os.</description>
    </item>
    <item>
      <title>Formatting Percentages</title>
      <link>http://localhost:1313/notes/computer-science/python/formatting-percentages/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/formatting-percentages/</guid>
      <description>Modified: July 03 2024&#xA;7/3/2024&#xA;Taken from this article.&#xA;Often in projects, we want to format our large float types as smaller percentages.&#xA;There are three main ways to do this:&#xA;Rounding and Float/String Types: round() takes two parameters: a value and a number to round too. Then, we can use a little complicated string statement.&#xA;&amp;gt;&amp;gt;&amp;gt; number = 0.8839133112 &amp;gt;&amp;gt;&amp;gt; n2 = round(number, 4) &amp;gt;&amp;gt;&amp;gt; print(n2) 0.886 &amp;gt;&amp;gt;&amp;gt; print(str(n2 * 100) + &amp;#39;%&amp;#39;) Format() Alternatively, if that seems a bit complicated, we can just format() instead.</description>
    </item>
    <item>
      <title>Words of Radiance</title>
      <link>http://localhost:1313/notes/entertainment/books/words-of-radiance/</link>
      <pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/words-of-radiance/</guid>
      <description>Modified: July 02 2024&#xA;I finished Words of Radiance two days ago, and it initially got a 4 out of 5. I loved the book. I really did, and was invested from start to finish.&#xA;It took me about 3 weeks (3 weeks and 3 days says Goodreads) and it really flew by. I enjoyed tackling such a huge tome of a novel.&#xA;The characters were awesome, even if I felt like the interlude characters could have been longer to make them a bit more memorable.</description>
    </item>
    <item>
      <title>Jobany Rosario</title>
      <link>http://localhost:1313/projects/jobany-rosario/</link>
      <pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/jobany-rosario/</guid>
      <description> New updated Schedule:&#xA;Monday:&#xA;Dojo 11am - 12pm 8pm - 9pm Wednesday:&#xA;Dojo 11am - 12pm Clockwork 7:30pm - 8:30pm Tuesday/Thursday/Friday:&#xA;Link to contact for privates </description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 9</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</guid>
      <description>Modified: July 19 2024&#xA;Classes 6/28/2024&#xA;Classes combine data storage and functionality into one package. When you make a new class, you are making a new type of object. A new instance, or occurrence of that type are able to be made using function call of the class.&#xA;A class is made up of attributes and methods defined by the classes definition.&#xA;Python classes follow closely to other Object Oriented Programming languages classes in the following ways:</description>
    </item>
    <item>
      <title>Flask&#39;s Quickstart</title>
      <link>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-quickstart/</link>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/flask-notes/flasks-quickstart/</guid>
      <description>Link to documentation.&#xA;Flask is a framework to create applications via Python. It makes web based applications rather simple.&#xA;Starting from the here, the installation page.&#xA;Installation Python Version Python version should be up to date. Flask supports 3.8 and newer.&#xA;Dependencies The following are installed automatically when installing Flask:&#xA;Werkzeug uses WSGI, the standard Python interface between applications and servers. Jinja is a template language that renders the pages your application serves.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 8</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</guid>
      <description>Modified: July 19 2024&#xA;Errors and Exceptions 6/22/2024&#xA;There are two distinguishable types of errors: syntax errors and exceptions.&#xA;8.1 Syntax Syntax errors (or parsing errors) are errors involving the actual use of the language.&#xA;&amp;gt;&amp;gt;&amp;gt; while True print(&amp;#39;Hello World&amp;#39;) File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1 while True print(&amp;#39;Hello world&amp;#39;) ^^^^^ SyntaxError: invalid syntax In the example above, the while statement is missing the : required to use it.&#xA;8.2 Exceptions Even if code is syntactically correct, an error may occur when attempting to execute it.</description>
    </item>
    <item>
      <title>Designing a RESTful API</title>
      <link>http://localhost:1313/projects/designing-a-restful-api/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/designing-a-restful-api/</guid>
      <description>Modified: August 02 2024&#xA;Watched this video to take some notes on what REST is.&#xA;API: Application Programming Interface, is how to computers can communicate with each other.&#xA;Client sends a Request to the server, server sends a response back to the client.&#xA;REST, or Representational State Transfer, is the most popular way to communicate with these web servers.&#xA;REST is actually a set of rules and standards. Any API that follows the REST rules is known as a RESTful API.</description>
    </item>
    <item>
      <title>What is NumPy</title>
      <link>http://localhost:1313/notes/computer-science/python/numpy-notes/what-is-numpy/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/numpy-notes/what-is-numpy/</guid>
      <description>Link to documentation&#xA;What is NumPy? Python lists are great- easy to use, easy to understand, and perfect for quick one-and-done scenarios. However, there is a huge downside to lists. In most cases, since lists can accept any data type by default, this leaves lists open to unexpected data types you might not want around your list data.&#xA;NumPy is a solution to this issue, specifically in the realm of scientific computing.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 7</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</guid>
      <description>Modified: July 19 2024&#xA;Input and Output 6/18/2024&#xA;There are three main ways to present output in Python; expression statements (not using print()), using print(), and using write() which writes something into an existing or new file.&#xA;7.1 Fancier Output Formatting At any point in the command line, I can just send out some text without any print() commands and get back what I just sent in. That&amp;rsquo;s an expression statement.</description>
    </item>
    <item>
      <title>Future Projects</title>
      <link>http://localhost:1313/projects/future-projects/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/future-projects/</guid>
      <description>Modified: June 20 2024&#xA;Obsidian Related:&#xA;Integrate an AI model into Obsidian as a plug-in LLM trained on my Obsidian data Obsidian plug-in that automates a bibliography from links Website related:&#xA;Python script that automates adding .md to Excalidraw files after Obsidian to Hugo transfer. </description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 6</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</guid>
      <description>Modified: July 19 2024&#xA;Modules 6/15/2024&#xA;Obviously, using local instances are not viable for long time development is not realistic. This is why we write scripts.&#xA;Python has the ability to writes scripts, or another method called modules. Definitions from modules can be imported into your instance of Python.&#xA;Main is also given a definition here: the collection of variables that you have access to in a script executed at the top level and in calculator mode.</description>
    </item>
    <item>
      <title>Vinyl Visualizer</title>
      <link>http://localhost:1313/projects/vinyl-visualizer/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/vinyl-visualizer/</guid>
      <description>A passion project I&amp;rsquo;d like to make. It would be my first time using hardware and software together.&#xA;To start, I&amp;rsquo;d like to grab a raspberry pi with a screen and audio in so it can display the record cover, the title, artist, and duration that updates as the song goes on.&#xA;I first asked ChatGPT 3.5 for advice.&#xA;I also asked ChatGPT 4o and got a little better/pointed advice.</description>
    </item>
    <item>
      <title>75. Sort Colors</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/75.-sort-colors/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/75.-sort-colors/</guid>
      <description>Modified: August 02 2024&#xA;Description:&#xA;Given an array nums with n objects colored red, white, or blue, sort in-place so that objects of the same color are adjacent. Colors are integers 0, 1, and 2 respectively.&#xA;Example: Input: nums = [2,0,2,1,1,0] Output: [0,0,1,1,2,2]&#xA;Basically, sort them in order without using the built-in sort function.&#xA;So I worked on this at work, and I got to a certain point where I was using a hash map to count the amount of times they went through, which I was able to make.</description>
    </item>
    <item>
      <title>1122. Relative Sort Array</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</link>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</guid>
      <description>Modified: August 02 2024&#xA;Description:&#xA;Given two arrays, arr1 and arr2, where all elements in arr2 are distinct, as well as all elements in arr2 are in arr1.&#xA;Sort the elements of arr1 so that the ordering of items in arr1 is the same as arr2. Any element not in arr2 should be appended in ascending/increasing order at the end of the list.&#xA;Example: Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6] Output: [2,2,2,1,4,3,3,9,6,7,19]</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 5</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</guid>
      <description>Data Structures 6/10/2024&#xA;5.1 More on Lists Methods for Lists:&#xA;list.append(x) Adds an item to the end of the list Equivalent to a[len(a):] = [x] list.extend(iterable) Extend the list by appending all items from an iterable list.insert(i, x) Insert an item into a given position, where i is the index location and x is the value list.remove(x) Remove the first item from the list whose value is equal to x, ValueError if no such item list.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 4</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</link>
      <pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</guid>
      <description>Modified: July 19 2024&#xA;Control Flow Tools 6/5/2024&#xA;The while loop was seen in the previous Fibonacci Sequence example.&#xA;4.1 if Statements &amp;gt;&amp;gt;&amp;gt; x = int(input(&amp;#34;Please enter an integer: &amp;#34;)) Please enter an integer: 42 &amp;gt;&amp;gt;&amp;gt; if x &amp;lt; 0: &amp;gt;&amp;gt;&amp;gt; x = 0 &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Negative so now it&amp;#39;s zero!&amp;#34;) &amp;gt;&amp;gt;&amp;gt; elif x == 0: &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Zero!!!&amp;#34;) &amp;gt;&amp;gt;&amp;gt; elif x == 1: &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;UNO!!!!!&amp;#34;) &amp;gt;&amp;gt;&amp;gt; else: &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Nice B)&amp;#34;) Nice B) Very basic; all you need is an if statement.</description>
    </item>
    <item>
      <title>AI Engineer Roadmap</title>
      <link>http://localhost:1313/notes/computer-science/ai-engineer-roadmap/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/ai-engineer-roadmap/</guid>
      <description>A resource by Code Basics&#xA;We&amp;rsquo;ll see how this works. Starting in June of 2024, I plan to get myself prepared for a new career after another year of teaching. Pretty much; I want to find a job ideally that starts in the late summer of next year.&#xA;Week 0 is stupid lol.&#xA;Week 1 and 2 (6/2 - 6/17) I have a masters degree in this subject. I think I can handle a khan academy course and going through the entire Python documentation in two weeks.</description>
    </item>
    <item>
      <title>Naruto</title>
      <link>http://localhost:1313/notes/entertainment/manga/naruto/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/manga/naruto/</guid>
      <description>Modified: August 02 2024&#xA;by Masashi Kishimoto 1999 - 2014&#xA;I finished Naruto today. I really enjoyed reading it; I nearly flew through it in just over or under 3 months. I had a blast-Kishimoto&amp;rsquo;s art was really fun and emotive and kept me wanting to see just how each page would grow in more detail and impact. I think it delivered in that respect. The last 100 chapters had many great panels-none screenshot worthy in my opinion like the beginning/middle of the series but regardless a lot of fun.</description>
    </item>
    <item>
      <title>Topics I&#39;m Interested In</title>
      <link>http://localhost:1313/notes/topics-im-interested-in/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/topics-im-interested-in/</guid>
      <description>This is an all-purpose note I&amp;rsquo;ll write down important links too, as well as connect to all sorts of things I want to learn more about.&#xA;General Brazilian Jiu-Jitsu Jobany Rosario Wood working/building Computer Science Hardware Raspberry Pi NAS Circuit Playground Express Servers/server rooms Cyber security Encryption Algorithms Introduction to Algorithms BASIC Compression Email NAS/Home Server How to Start a Homelab for $0 Extras Link to Summer Job&#xA;I found a pretty decent resource on Python and Machine learning.</description>
    </item>
    <item>
      <title>You Are Not Expected To Understand This</title>
      <link>http://localhost:1313/notes/entertainment/books/you-are-not-expected-to-understand-this/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/entertainment/books/you-are-not-expected-to-understand-this/</guid>
      <description>Modified: July 26 2024&#xA;26 short essays on the pieces/lines of code that shaped the modern understanding of computer science.&#xA;6/3/24&#xA;Halfway through, I think some of the stories are interesting. Some of the articles don&amp;rsquo;t go as deep as I think they could/should; some bring up gender/race for seemingly no reason&amp;hellip;others actually delve deeper into the politics of it encouragingly.&#xA;I started Topics I&amp;rsquo;m Interested In because of this book pretty much.</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 1, 2, and 3</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</link>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</guid>
      <description>Modified: July 19 2024&#xA;Link to source&#xA;6/2/2024&#xA;In order to get a better understanding of Python as a whole language, I&amp;rsquo;m going to document and take notes as I go through the tutorial. I mostly would like to improve as a programmer, and eventually get a software job at Google or something.&#xA;Introduction What is Python?&#xA;Python is an easy to learn, powerful programming language. Featuring efficient high-level data structures as well as a simple but effective approach to object-oriented programming.</description>
    </item>
  </channel>
</rss>
