<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning Modern Linux on Mr. Pointing</title>
    <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/</link>
    <description>Recent content in Learning Modern Linux on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 06 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Modern Linux - Chapter 7</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-7/</link>
      <pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-7/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;networking&#34;&gt;Networking&lt;/h1&gt;&#xA;&lt;p&gt;A topic I&amp;rsquo;ve gone over before in a few notes now, so if you want a deeper dive on general topics, see &lt;a href=&#34;https://mrpointing.com/notes/computer-science/internet-and-it/coursera/introduction-to-computer-networking/&#34;&gt;this&lt;/a&gt; note. What we&amp;rsquo;re going to look at now is the Linux side of things, and how the Linux protocol deals with connecting to the world wide web. Specifically, the network protocols used and tooling provided.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;p&gt;Without network connection, everything in the last chapter would be a moot point. There&amp;rsquo;s no external applications, supply chain past the initial purchase, and connection with the outside world. The tough part about networking is the amount of moving parts between all of the layers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 6</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-6/</link>
      <pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-6/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;chapter-6-applications-package-management-and-containers&#34;&gt;Chapter 6: Applications, Package Management, and Containers&lt;/h1&gt;&#xA;&lt;p&gt;Like most things in computer science, the term &lt;em&gt;application&lt;/em&gt; is used in a variety of different settings, and have other names that are often thought to be interchangeable (&lt;em&gt;program&lt;/em&gt;, &lt;em&gt;binary&lt;/em&gt;, &lt;em&gt;executable&lt;/em&gt;). They are all technically different, so that&amp;rsquo;s where we&amp;rsquo;ll start.&lt;/p&gt;&#xA;&lt;p&gt;We&amp;rsquo;re also going to look into how Linux systems &lt;strong&gt;boot&lt;/strong&gt;, and &lt;code&gt;systemd&lt;/code&gt;. These applications also need to be accessed, and for an enjoyable seamless experience they should be easily installable. We&amp;rsquo;ll look at &lt;em&gt;package managers&lt;/em&gt; and how they give users the ability to install applications across different distros and platforms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 5</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-5/</link>
      <pubDate>Sat, 28 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-5/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;filesystems&#34;&gt;Filesystems&lt;/h1&gt;&#xA;&lt;p&gt;Some would call this a dry topic, but in Linux and any UNIX based system &amp;ldquo;everything is a file&amp;rdquo;, so you should understand what&amp;rsquo;s going on with files. As the analogy suggests, nearly everything within the kernel is a file (with minor deviations). The &lt;em&gt;filesystem&lt;/em&gt; within the kernel defines how each file is laid out.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;p&gt;Most distros give each user a single filesystem tree starting at &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;root&lt;/code&gt;. Within each tree is either a directory or file. Easily list all files with &lt;code&gt;ls&lt;/code&gt;, change directories with &lt;code&gt;cd&lt;/code&gt;, and print your current working directory with &lt;code&gt;cwd&lt;/code&gt;. The above are so important and at first, you&amp;rsquo;ll be using them pretty much all the time. Lastly, file systems are implemented in the kernel, rather than user land.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 4</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-4/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-4/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;access-control&#34;&gt;Access Control&lt;/h1&gt;&#xA;&lt;p&gt;Like most things in the world, access is a means of collateral control. There are certain parts of your system you &lt;em&gt;wouldn&amp;rsquo;t&lt;/em&gt; want anyone to touch (think of your network settings or startup settings). Let&amp;rsquo;s discuss the means of enforcing access control, how files are ran, and some advanced Linux features for controlling your environment.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;p&gt;Linux has the ability to have multiple users running on one machine. Each user has a given ID and certain &lt;em&gt;permissions&lt;/em&gt; that dictate what that user is capable of. Users own &lt;em&gt;resources&lt;/em&gt;, or just files, and launch &lt;strong&gt;processes&lt;/strong&gt;, which use files through a user.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 3</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-3/</link>
      <pubDate>Tue, 03 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-3/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;shells-and-scripting&#34;&gt;Shells and Scripting&lt;/h1&gt;&#xA;&lt;p&gt;A huge part of getting comfortable with Linux is getting comfortable using the &lt;em&gt;command line&lt;/em&gt;, or &lt;em&gt;CLI&lt;/em&gt;. Most common distros today will have some standard GUI application to accomplish most tasks. However, like we discussed, this text is going to be applicable to all Linux releases, and some are entirely command-line driven. We&amp;rsquo;ll discuss some different types of shells, then take a look at &lt;em&gt;scripting&lt;/em&gt;, or pre-written chunks of commands in a file meant to be ran by the computer at designated times.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 1</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-1/</link>
      <pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-1/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-to-linux&#34;&gt;Introduction to Linux&lt;/h1&gt;&#xA;&lt;p&gt;Linux is one of the most used operating systems in the world. It&amp;rsquo;s used for a wide variety of applications, and has roots that go back years. TO understand where we are at and how we got here, let&amp;rsquo;s define &lt;strong&gt;modern&lt;/strong&gt; Linux.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-modern-environment&#34;&gt;What is a Modern Environment?&lt;/h2&gt;&#xA;&lt;p&gt;Put simply, these &amp;ldquo;environments&amp;rdquo; are spaces in which Linux is commonly used. These range from &lt;em&gt;mobile devices&lt;/em&gt;, (Android is developed with Linux!), &lt;em&gt;cloud computing&lt;/em&gt;, to &lt;em&gt;Internet of Things&lt;/em&gt; (think of smart appliances or cars). We even see Linux get involved when we are &lt;em&gt;diversifying processors&lt;/em&gt;. All of these spaces are heavily influenced by Linux.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Modern Linux - Chapter 2</title>
      <link>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-2/</link>
      <pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/textbooks/learning-modern-linux/learning-modern-linux---chapter-2/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;the-linux-kernel&#34;&gt;The Linux Kernel&lt;/h1&gt;&#xA;&lt;p&gt;In the last chapter, we gained a new perspective on what an Operating System actually does; gives us the ability to use an API to talk to our system hardware and abstracts out all of the obscure and human-intensive tasks. We&amp;rsquo;ll take a look now at where the kernel falls into place in this diagram; not as a separate entity, but a crucial part of the OS.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
