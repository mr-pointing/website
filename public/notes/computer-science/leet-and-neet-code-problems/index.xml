<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leet Code Problems on Mr. Pointing</title>
    <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/</link>
    <description>Recent content in Leet Code Problems on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 22 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Valid Parenthesis</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-parenthesis/</link>
      <pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-parenthesis/</guid>
      <description>Question: You are given a string s consisting of the following characters: &#39;(&#39;, &#39;)&#39;, &#39;{&#39;, &#39;}&#39;, &#39;[&#39; and &#39;]&#39;.&#xA;The input string s is valid if and only if:&#xA;Every open bracket is closed by the same type of close bracket. Open brackets are closed in the correct order. Every close bracket has a corresponding open bracket of the same type. Return true if s is a valid string, and false otherwise.</description>
    </item>
    <item>
      <title>Valid Sudoku</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-sudoku/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-sudoku/</guid>
      <description>Question: You are given a a 9 x 9 Sudoku board board. A Sudoku board is valid if the following rules are followed:&#xA;Each row must contain the digits 1-9 without duplicates. Each column must contain the digits 1-9 without duplicates. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without duplicates. Return true if the Sudoku board is valid, otherwise return false</description>
    </item>
    <item>
      <title>13. Roman to Integer</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/13.-roman-to-integer/</link>
      <pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/13.-roman-to-integer/</guid>
      <description>Question: Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.&#xA;Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000&#xA;For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</description>
    </item>
    <item>
      <title>Products of Array Not Including Self</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/products-of-array-not-including-self/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/products-of-array-not-including-self/</guid>
      <description>Question: Given an integer array nums, return an array output where output[i] is the product of all the elements of nums except nums[i].&#xA;How to Solve: I originally thought I had an awesome solution, but it only passed with the first test case that didn&amp;rsquo;t have zeros:&#xA;def productExceptSelf(self, nums: List[int]) -&amp;gt; List[int]: total = nums[0] * nums[1] ans = [] i = 2 while i &amp;lt; len(nums): total *= nums[i] i += 1 for num in nums: if num !</description>
    </item>
    <item>
      <title>Contains Duplicate</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/contains-duplicate/</guid>
      <description>Question: Given an integer array nums, return true if any value appears more than once in the array, otherwise return false.&#xA;How to Solve: We can create a secondary list that we can start to throw the values from our array nums into, and check to see if they already exist in the list or not. As soon as we enter a number that already exists in our list, it will return True and end.</description>
    </item>
    <item>
      <title>Two Integer Sum</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/two-integer-sum/</guid>
      <description>Question: Given an array of integers nums and an integer target, return the indices i and j such that nums[i] + nums[j] == target and i != j.&#xA;You may assume that every input has exactly one pair of indices i and j that satisfy the condition.&#xA;Return the answer with the smaller index first.&#xA;How to Solve: We can use a two pointer approach with i and j. First, we set up a for loop that will iterate j from the length of the array to the first position.</description>
    </item>
    <item>
      <title>Valid Anagram</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-anagram/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/valid-anagram/</guid>
      <description>Question: Given two strings s and t, return true if the two strings are anagrams of each other, otherwise return false.&#xA;An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.&#xA;How to Solve: We essentially need to compare two strings and see if the amount of characters are the same for each word. There are probably a few ways to do that, but I went for the extremely direct approach.</description>
    </item>
    <item>
      <title>75. Sort Colors</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/75.-sort-colors/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/75.-sort-colors/</guid>
      <description>Modified: August 02 2024&#xA;Description:&#xA;Given an array nums with n objects colored red, white, or blue, sort in-place so that objects of the same color are adjacent. Colors are integers 0, 1, and 2 respectively.&#xA;Example: Input: nums = [2,0,2,1,1,0] Output: [0,0,1,1,2,2]&#xA;Basically, sort them in order without using the built-in sort function.&#xA;So I worked on this at work, and I got to a certain point where I was using a hash map to count the amount of times they went through, which I was able to make.</description>
    </item>
    <item>
      <title>1122. Relative Sort Array</title>
      <link>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</link>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/leet-and-neet-code-problems/1122.-relative-sort-array/</guid>
      <description>Modified: August 02 2024&#xA;Description:&#xA;Given two arrays, arr1 and arr2, where all elements in arr2 are distinct, as well as all elements in arr2 are in arr1.&#xA;Sort the elements of arr1 so that the ordering of items in arr1 is the same as arr2. Any element not in arr2 should be appended in ascending/increasing order at the end of the list.&#xA;Example: Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6] Output: [2,2,2,1,4,3,3,9,6,7,19]</description>
    </item>
  </channel>
</rss>
