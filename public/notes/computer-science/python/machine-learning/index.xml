<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on Mr. Pointing</title>
    <link>https://mrpointing.com/notes/computer-science/python/machine-learning/</link>
    <description>Recent content in Machine Learning on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 02 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mrpointing.com/notes/computer-science/python/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gradient Descent</title>
      <link>https://mrpointing.com/notes/computer-science/python/machine-learning/gradient-descent/</link>
      <pubDate>Thu, 02 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/python/machine-learning/gradient-descent/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;This one will be a quick one, but it&amp;rsquo;s really important. We know that given an input dataset, and given a &lt;em&gt;function&lt;/em&gt;, we can calculate the output. For example, if we have $x=[1, 2, 3]$, and the function $y=3x-2$, we could reasonably figure out the dataset of $y$; $[1, 4, 7]$. Another term for this function, in the case of Machine Learning, is a &lt;em&gt;prediction function&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Sometimes, we&amp;rsquo;re only given the input and output data. It would be incredibly helpful if we were able to figure out that prediction function, so we can predict unseen input values with precision. We&amp;rsquo;re actually going to continue working with the dataset we began working with in single variable linear regression.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linear Regression</title>
      <link>https://mrpointing.com/notes/computer-science/python/machine-learning/linear-regression/</link>
      <pubDate>Sun, 21 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://mrpointing.com/notes/computer-science/python/machine-learning/linear-regression/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;single-variable&#34;&gt;Single Variable&lt;/h1&gt;&#xA;&lt;p&gt;A great beginner model, &lt;em&gt;Linear Regression&lt;/em&gt; uses input and output features to predict new inputs. There are lots of things we can predict; stock prices, collectibles, cars, you name it. An easy one we can use for now is home prices. Take the following table for example;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Area&lt;/th&gt;&#xA;          &lt;th&gt;Price&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1750&lt;/td&gt;&#xA;          &lt;td&gt;465000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2000&lt;/td&gt;&#xA;          &lt;td&gt;545000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2300&lt;/td&gt;&#xA;          &lt;td&gt;570000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2800&lt;/td&gt;&#xA;          &lt;td&gt;595000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3200&lt;/td&gt;&#xA;          &lt;td&gt;614000&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Our objective is to create a model that will correctly price out a new house given we provide a square footage area. We can see a really clear pattern; as the area increase, the price increases. We could easily plot this on a scatter plot and see the correlation. We should also remember from algebra that we can create a line of best fit, that would minimize the amount of error between the expected amount and the actual amount (the price). Sounds, confusing, let&amp;rsquo;s actually see what happens.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
