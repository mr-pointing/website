<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Python Tutorial on Mr. Pointing</title>
    <link>http://localhost:1313/notes/computer-science/python/python-tutorial/</link>
    <description>Recent content in The Python Tutorial on Mr. Pointing</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 13 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/notes/computer-science/python/python-tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Python Tutorial Notes - Chapter 12</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-12/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;virtual-environments-and-packages&#34;&gt;&lt;strong&gt;Virtual Environments and Packages&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-introduction&#34;&gt;&lt;strong&gt;12.1 Introduction&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Often, you&amp;rsquo;re going to need tools and modules that aren&amp;rsquo;t included with Python by default, or in your standard library. One Python install might not suffice for most applications.&lt;/p&gt;&#xA;&lt;p&gt;To circumnavigate this, we create &lt;em&gt;virtual environments&lt;/em&gt;, that act as self-contained directories with an installation of Python, and any number of packages.&lt;/p&gt;&#xA;&lt;h3 id=&#34;122-creating-virtual-environments&#34;&gt;&lt;strong&gt;12.2 Creating Virtual Environments&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;We can use the &lt;code&gt;venv&lt;/code&gt; module to create and manage our own virtual environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 11</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-11/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;the-standard-library---part-2&#34;&gt;&lt;strong&gt;The Standard Library - Part 2&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;7/9/2024&lt;/p&gt;&#xA;&lt;p&gt;The second part here will go over more advanced, less common modules that nevertheless, exist.&lt;/p&gt;&#xA;&lt;h3 id=&#34;111-output-formatting&#34;&gt;&lt;strong&gt;11.1 Output Formatting&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;reprlib&lt;/code&gt; is an appropriately named library containing a version of &lt;code&gt;repr()&lt;/code&gt; modified for abbreviated displays of large or deeply nested containers:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; reprlib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; reprlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;repr(set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;supercalafragalisticexpialidocious&amp;#39;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&amp;#39;a&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;,...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pprint&lt;/code&gt; is a module with more sophisticated control over printing both built-in and user defined objects. Could also be called a &amp;ldquo;pretty printer&amp;rdquo;, it will add line breaks and indentation to more clearly reveal complex data structures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 10</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-10/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;a-brief-tour-of-the-standard-library&#34;&gt;&lt;strong&gt;A Brief Tour of the Standard Library&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;7/4/2024&lt;/p&gt;&#xA;&lt;h3 id=&#34;101-operating-system-interface&#34;&gt;&lt;strong&gt;10.1 Operating System Interface&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;os&lt;/code&gt; module provides functions for interacting with operating systems:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getcwd()     &lt;span style=&#34;color:#75715e&#34;&gt;# returns the working directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Python312&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/server/accesslogs&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;# change working directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mkdir today&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;# run the command mkdir in the system shell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Never use &lt;code&gt;from os import *&lt;/code&gt;. It&amp;rsquo;s not good practice to not  do this regardless, but it will specifically keep &lt;code&gt;os.open()&lt;/code&gt; from shadowing the built-in &lt;code&gt;open()&lt;/code&gt; function which operators for opening files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 9</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-9/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;classes&#34;&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/28/2024&lt;/p&gt;&#xA;&lt;p&gt;Classes combine data storage and functionality into one package. When you make a new class, you are making a new &lt;em&gt;type&lt;/em&gt; of object. A new &lt;em&gt;instance&lt;/em&gt;, or occurrence of that type are able to be made using function call of the class.&lt;/p&gt;&#xA;&lt;p&gt;A class is made up of attributes and methods defined by the classes definition.&lt;/p&gt;&#xA;&lt;p&gt;Python classes follow closely to other Object Oriented Programming languages classes in the following ways:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 8</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-8/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;errors-and-exceptions&#34;&gt;&lt;strong&gt;Errors and Exceptions&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/22/2024&lt;/p&gt;&#xA;&lt;p&gt;There are two distinguishable types of errors: &lt;em&gt;syntax errors&lt;/em&gt; and &lt;em&gt;exceptions&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;81-syntax&#34;&gt;&lt;strong&gt;8.1 Syntax&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Syntax errors (or parsing errors) are errors involving the actual use of the language.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt; print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   File &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt; print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;^^^^^&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SyntaxError&lt;/span&gt;: invalid syntax&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the &lt;code&gt;while&lt;/code&gt; statement is missing the &lt;code&gt;:&lt;/code&gt; required to use it.&lt;/p&gt;&#xA;&lt;h3 id=&#34;82-exceptions&#34;&gt;&lt;strong&gt;8.2 Exceptions&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Even if code is syntactically correct, an error may occur when attempting to execute it. When the error is thrown, the last line of the error usually has an explanation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 7</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-7/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;input-and-output&#34;&gt;&lt;strong&gt;Input and Output&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/18/2024&lt;/p&gt;&#xA;&lt;p&gt;There are three main ways to present output in Python; expression statements (not using &lt;code&gt;print()&lt;/code&gt;), using &lt;code&gt;print()&lt;/code&gt;, and using &lt;code&gt;write()&lt;/code&gt; which writes something into an existing or new file.&lt;/p&gt;&#xA;&lt;h3 id=&#34;71-fancier-output-formatting&#34;&gt;&lt;strong&gt;7.1 Fancier Output Formatting&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;At any point in the command line, I can just send out some text without any &lt;code&gt;print()&lt;/code&gt; commands and get back what I just sent in. That&amp;rsquo;s an expression statement. Not super important.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 6</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-6/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;modules&#34;&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/15/2024&lt;/p&gt;&#xA;&lt;p&gt;Obviously, using local instances are not viable for long time development is not realistic. This is why we write &lt;em&gt;scripts&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Python has the ability to writes scripts, or another method called modules. Definitions from modules can be imported into your instance of Python.&lt;/p&gt;&#xA;&lt;p&gt;Main is also given a definition here: the collection of variables that you have access to in a script executed at the top level and in calculator mode.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 5</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-5/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;data-structures&#34;&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/10/2024&lt;/p&gt;&#xA;&lt;h3 id=&#34;51-more-on-lists&#34;&gt;&lt;strong&gt;5.1 More on Lists&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Methods for Lists:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;list.append(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Adds an item to the end of the list&lt;/li&gt;&#xA;&lt;li&gt;Equivalent to &lt;code&gt;a[len(a):] = [x]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.extend(iterable)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Extend the list by appending all items from an iterable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.insert(i, x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Insert an item into a given position, where &lt;code&gt;i&lt;/code&gt; is the index location and &lt;code&gt;x&lt;/code&gt; is the value&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.remove(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove the first item from the list whose value is equal to &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;ValueError&lt;/code&gt; if no such item&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.pop([i])&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove the item at the given position in the list, and return it. Without an index, it will remove and return the last item in the list. &lt;code&gt;IndexError&lt;/code&gt; if the list is empty or the index is out of the list range&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.clear()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Remove all items from the list. Equivalent to &lt;code&gt;del a[:]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.index(x[, start[, end]]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return zero-based index from the value &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;ValueError&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; does not exist.&lt;/li&gt;&#xA;&lt;li&gt;Parameters interpreted as slices from the list in &lt;code&gt;[]&lt;/code&gt; format&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.count(x)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return the number of times &lt;code&gt;x&lt;/code&gt; appears in the list&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.sort(*, key=None, reverse=False)&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sort the items of the list in place&lt;/li&gt;&#xA;&lt;li&gt;Arguments used for sort customization&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;key&lt;/code&gt; can be set to things like &lt;code&gt;key=str.lower&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;There&amp;rsquo;s a good &lt;a href=&#34;https://docs.python.org/3.12/howto/sorting.html#sortinghowto&#34;&gt;doc&lt;/a&gt; on sorting I want to go over later&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.reverse()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reverse the elements of the list in place&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list.copy()&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Return a copy of the list&lt;/li&gt;&#xA;&lt;li&gt;Same as &lt;code&gt;a[:]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shroomie&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aphrodite&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Atticus&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; cats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Peaches&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Methods like &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt; or &lt;code&gt;sort&lt;/code&gt; modify the list and actually return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 4</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</link>
      <pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-4/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;control-flow-tools&#34;&gt;&lt;strong&gt;Control Flow Tools&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;6/5/2024&lt;/p&gt;&#xA;&lt;p&gt;The while loop was seen in the previous Fibonacci Sequence example.&lt;/p&gt;&#xA;&lt;h3 id=&#34;41-if-statements&#34;&gt;&lt;strong&gt;4.1 &lt;code&gt;if&lt;/code&gt; Statements&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Please enter an integer: &amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Please enter an integer: &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Negative so now it&amp;#39;s zero!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zero!!!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UNO!!!!!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nice B)&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Nice B)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Very basic; all you need is an if statement. Else is optional, and you can have many else if (&lt;code&gt;elif&lt;/code&gt;) statements as you desire.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Tutorial Notes - Chapter 1, 2, and 3</title>
      <link>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</link>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/computer-science/python/python-tutorial/the-python-tutorial-notes---chapter-1-2-and-3/</guid>
      <description>&lt;p&gt;Modified: July 19 2024&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;Link to source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;6/2/2024&lt;/p&gt;&#xA;&lt;p&gt;In order to get a better understanding of Python as a whole language, I&amp;rsquo;m going to document and take notes as I go through the tutorial. I mostly would like to improve as a programmer, and eventually get a software job at Google or something.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;What is Python?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Python is an easy to learn, powerful programming language. Featuring efficient high-level data structures as well as a simple but effective approach to object-oriented programming.&lt;/li&gt;&#xA;&lt;li&gt;Ideal language for scripting and rapid application development&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Description of objects and modules are in &lt;a href=&#34;https://docs.python.org/3/library/index.html#library-index&#34;&gt;The Python Standard Library&lt;/a&gt;. I&amp;rsquo;ll probably go through this another day.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
